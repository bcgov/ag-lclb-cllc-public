// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Gov.Lclb.Cllb.Interfaces.GeoCoder.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class JsonResponseFeaturesItem
    {
        /// <summary>
        /// Initializes a new instance of the JsonResponseFeaturesItem class.
        /// </summary>
        public JsonResponseFeaturesItem()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the JsonResponseFeaturesItem class.
        /// </summary>
        public JsonResponseFeaturesItem(string fullAddress = default(string), int? score = default(int?), string matchPrecision = default(string), int? precisionPoints = default(int?), IList<JsonResponseFeaturesPropertiesPropertiesItemsItem> faults = default(IList<JsonResponseFeaturesPropertiesPropertiesItemsItem>), string siteName = default(string), string unitDesignator = default(string), string unitNumber = default(string), string unitNumberSuffix = default(string), int? civicNumber = default(int?), string civicNumberSuffix = default(string), string streetName = default(string), string streetType = default(string), string isStreetTypePrefix = default(string), string streetDirection = default(string), string isStreetDirectionPrefix = default(string), string streetQualifier = default(string), string localityName = default(string), string localityType = default(string), string electoralArea = default(string), string provinceCode = default(string), string locationPositionalAccuracy = default(string), string locationDescriptor = default(string), string siteID = default(string), int? blockID = default(int?), string fullSiteDescriptor = default(string), string accessNotes = default(string), string siteStatus = default(string), string siteRetireDate = default(string), string changeDate = default(string), string isOfficial = default(string))
        {
            FullAddress = fullAddress;
            Score = score;
            MatchPrecision = matchPrecision;
            PrecisionPoints = precisionPoints;
            Faults = faults;
            SiteName = siteName;
            UnitDesignator = unitDesignator;
            UnitNumber = unitNumber;
            UnitNumberSuffix = unitNumberSuffix;
            CivicNumber = civicNumber;
            CivicNumberSuffix = civicNumberSuffix;
            StreetName = streetName;
            StreetType = streetType;
            IsStreetTypePrefix = isStreetTypePrefix;
            StreetDirection = streetDirection;
            IsStreetDirectionPrefix = isStreetDirectionPrefix;
            StreetQualifier = streetQualifier;
            LocalityName = localityName;
            LocalityType = localityType;
            ElectoralArea = electoralArea;
            ProvinceCode = provinceCode;
            LocationPositionalAccuracy = locationPositionalAccuracy;
            LocationDescriptor = locationDescriptor;
            SiteID = siteID;
            BlockID = blockID;
            FullSiteDescriptor = fullSiteDescriptor;
            AccessNotes = accessNotes;
            SiteStatus = siteStatus;
            SiteRetireDate = siteRetireDate;
            ChangeDate = changeDate;
            IsOfficial = isOfficial;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "fullAddress")]
        public string FullAddress { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "score")]
        public int? Score { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "matchPrecision")]
        public string MatchPrecision { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "precisionPoints")]
        public int? PrecisionPoints { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "faults")]
        public IList<JsonResponseFeaturesPropertiesPropertiesItemsItem> Faults { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "siteName")]
        public string SiteName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "unitDesignator")]
        public string UnitDesignator { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "unitNumber")]
        public string UnitNumber { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "unitNumberSuffix")]
        public string UnitNumberSuffix { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "civicNumber")]
        public int? CivicNumber { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "civicNumberSuffix")]
        public string CivicNumberSuffix { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "streetName")]
        public string StreetName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "streetType")]
        public string StreetType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "isStreetTypePrefix")]
        public string IsStreetTypePrefix { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "streetDirection")]
        public string StreetDirection { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "isStreetDirectionPrefix")]
        public string IsStreetDirectionPrefix { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "streetQualifier")]
        public string StreetQualifier { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "localityName")]
        public string LocalityName { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "localityType")]
        public string LocalityType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "electoralArea")]
        public string ElectoralArea { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "provinceCode")]
        public string ProvinceCode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "locationPositionalAccuracy")]
        public string LocationPositionalAccuracy { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "locationDescriptor")]
        public string LocationDescriptor { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "siteID")]
        public string SiteID { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "blockID")]
        public int? BlockID { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "fullSiteDescriptor")]
        public string FullSiteDescriptor { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "accessNotes")]
        public string AccessNotes { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "siteStatus")]
        public string SiteStatus { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "siteRetireDate")]
        public string SiteRetireDate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "changeDate")]
        public string ChangeDate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "isOfficial")]
        public string IsOfficial { get; set; }

    }
}
