// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Gov.Lclb.Cllb.Interfaces.GeoCoder.Models
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class JsonResponse
    {
        /// <summary>
        /// Initializes a new instance of the JsonResponse class.
        /// </summary>
        public JsonResponse()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the JsonResponse class.
        /// </summary>
        public JsonResponse(string type = default(string), string queryAddress = default(string), string searchTimestamp = default(string), double? executionTime = default(double?), string version = default(string), System.DateTime? baseDataDate = default(System.DateTime?), JsonResponseCrs crs = default(JsonResponseCrs), string interpolation = default(string), string echo = default(string), string locationDescriptor = default(string), int? setBack = default(int?), int? minScore = default(int?), int? maxResults = default(int?), string disclaimer = default(string), string privacyStatement = default(string), string copyrightNotice = default(string), string copyrightLicense = default(string), IList<JsonResponseFeaturesItemModel> features = default(IList<JsonResponseFeaturesItemModel>))
        {
            Type = type;
            QueryAddress = queryAddress;
            SearchTimestamp = searchTimestamp;
            ExecutionTime = executionTime;
            Version = version;
            BaseDataDate = baseDataDate;
            Crs = crs;
            Interpolation = interpolation;
            Echo = echo;
            LocationDescriptor = locationDescriptor;
            SetBack = setBack;
            MinScore = minScore;
            MaxResults = maxResults;
            Disclaimer = disclaimer;
            PrivacyStatement = privacyStatement;
            CopyrightNotice = copyrightNotice;
            CopyrightLicense = copyrightLicense;
            Features = features;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public string Type { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "queryAddress")]
        public string QueryAddress { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "searchTimestamp")]
        public string SearchTimestamp { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "executionTime")]
        public double? ExecutionTime { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "version")]
        public string Version { get; set; }

        /// <summary>
        /// </summary>
        [JsonConverter(typeof(DateJsonConverter))]
        [JsonProperty(PropertyName = "baseDataDate")]
        public System.DateTime? BaseDataDate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "crs")]
        public JsonResponseCrs Crs { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "interpolation")]
        public string Interpolation { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "echo")]
        public string Echo { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "locationDescriptor")]
        public string LocationDescriptor { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "setBack")]
        public int? SetBack { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "minScore")]
        public int? MinScore { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "maxResults")]
        public int? MaxResults { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "disclaimer")]
        public string Disclaimer { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "privacyStatement")]
        public string PrivacyStatement { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "copyrightNotice")]
        public string CopyrightNotice { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "copyrightLicense")]
        public string CopyrightLicense { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "features")]
        public IList<JsonResponseFeaturesItemModel> Features { get; set; }

    }
}
