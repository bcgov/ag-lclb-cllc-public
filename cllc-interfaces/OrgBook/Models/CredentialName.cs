// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Gov.Lclb.Cllb.Interfaces.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class CredentialName
    {
        /// <summary>
        /// Initializes a new instance of the CredentialName class.
        /// </summary>
        public CredentialName()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the CredentialName class.
        /// </summary>
        /// <param name="id">ID</param>
        /// <param name="text">Text</param>
        /// <param name="language">Language</param>
        /// <param name="credentialId">Credential id</param>
        public CredentialName(int? id = default(int?), string text = default(string), string language = default(string), string credentialId = default(string))
        {
            Id = id;
            Text = text;
            Language = language;
            CredentialId = credentialId;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets ID
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public int? Id { get; private set; }

        /// <summary>
        /// Gets or sets text
        /// </summary>
        [JsonProperty(PropertyName = "text")]
        public string Text { get; set; }

        /// <summary>
        /// Gets or sets language
        /// </summary>
        [JsonProperty(PropertyName = "language")]
        public string Language { get; set; }

        /// <summary>
        /// Gets credential id
        /// </summary>
        [JsonProperty(PropertyName = "credential_id")]
        public string CredentialId { get; private set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Text != null)
            {
                if (Text.Length < 1)
                {
                    throw new ValidationException(ValidationRules.MinLength, "Text", 1);
                }
            }
            if (Language != null)
            {
                if (Language.Length < 1)
                {
                    throw new ValidationException(ValidationRules.MinLength, "Language", 1);
                }
            }
        }
    }
}
