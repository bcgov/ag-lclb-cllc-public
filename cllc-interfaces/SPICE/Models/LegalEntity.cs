// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Gov.Lclb.Cllb.Interfaces.Spice.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class LegalEntity
    {
        /// <summary>
        /// Initializes a new instance of the LegalEntity class.
        /// </summary>
        public LegalEntity()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the LegalEntity class.
        /// </summary>
        public LegalEntity(string entityId = default(string), string name = default(string), bool? isIndividual = default(bool?), Contact contact = default(Contact), Account account = default(Account), IList<Alias> aliases = default(IList<Alias>), IList<Address> previousAddresses = default(IList<Address>))
        {
            EntityId = entityId;
            Name = name;
            IsIndividual = isIndividual;
            Contact = contact;
            Account = account;
            Aliases = aliases;
            PreviousAddresses = previousAddresses;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "entityId")]
        public string EntityId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "isIndividual")]
        public bool? IsIndividual { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "contact")]
        public Contact Contact { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "account")]
        public Account Account { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "aliases")]
        public IList<Alias> Aliases { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "previousAddresses")]
        public IList<Address> PreviousAddresses { get; set; }

    }
}
