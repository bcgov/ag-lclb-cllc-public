// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Gov.Lclb.Cllb.Interfaces
{
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;
    using Models;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Net;
    using System.Net.Http;

    /// <summary>
    /// This OData service is located at http://localhost
    /// </summary>
    public partial class DynamicsClient : ServiceClient<DynamicsClient>, IDynamicsClient
    {
        /// <summary>
        /// The base URI of the service.
        /// </summary>
        public System.Uri BaseUri { get; set; }

        /// <summary>
        /// Gets or sets json serialization settings.
        /// </summary>
        public JsonSerializerSettings SerializationSettings { get; private set; }

        /// <summary>
        /// Gets or sets json deserialization settings.
        /// </summary>
        public JsonSerializerSettings DeserializationSettings { get; private set; }

        /// <summary>
        /// Show only the first n items
        /// </summary>
        public int? Top234 { get; set; }

        /// <summary>
        /// Skip the first n items
        /// </summary>
        public int? Skip234 { get; set; }

        /// <summary>
        /// Include count of items
        /// </summary>
        public bool? Count234 { get; set; }

        /// <summary>
        /// Filter items by property values
        /// </summary>
        public string Filter234 { get; set; }

        /// <summary>
        /// Search items by search phrases
        /// </summary>
        public string Search234 { get; set; }

        /// <summary>
        /// Subscription credentials which uniquely identify client subscription.
        /// </summary>
        public ServiceClientCredentials Credentials { get; private set; }

        /// <summary>
        /// Gets the IAccounts.
        /// </summary>
        public virtual IAccounts Accounts { get; private set; }

        /// <summary>
        /// Gets the IPartyidadoxiolocalgovindigenousnation.
        /// </summary>
        public virtual IPartyidadoxiolocalgovindigenousnation Partyidadoxiolocalgovindigenousnation { get; private set; }

        /// <summary>
        /// Gets the IAdoxiolicencetypeadoxioinvestigationset.
        /// </summary>
        public virtual IAdoxiolicencetypeadoxioinvestigationset Adoxiolicencetypeadoxioinvestigationset { get; private set; }

        /// <summary>
        /// Gets the IAliases.
        /// </summary>
        public virtual IAliases Aliases { get; private set; }

        /// <summary>
        /// Gets the IAnnualvolumes.
        /// </summary>
        public virtual IAnnualvolumes Annualvolumes { get; private set; }

        /// <summary>
        /// Gets the IApplicationbpfv3s.
        /// </summary>
        public virtual IApplicationbpfv3s Applicationbpfv3s { get; private set; }

        /// <summary>
        /// Gets the IApplicationcrsbpfv4s.
        /// </summary>
        public virtual IApplicationcrsbpfv4s Applicationcrsbpfv4s { get; private set; }

        /// <summary>
        /// Gets the IApplicationinvoicehistories.
        /// </summary>
        public virtual IApplicationinvoicehistories Applicationinvoicehistories { get; private set; }

        /// <summary>
        /// Gets the IApplicationlicenseechangesv10s.
        /// </summary>
        public virtual IApplicationlicenseechangesv10s Applicationlicenseechangesv10s { get; private set; }

        /// <summary>
        /// Gets the IApplicationliquorbpfs.
        /// </summary>
        public virtual IApplicationliquorbpfs Applicationliquorbpfs { get; private set; }

        /// <summary>
        /// Gets the IApplicationliquorbpfv2s.
        /// </summary>
        public virtual IApplicationliquorbpfv2s Applicationliquorbpfv2s { get; private set; }

        /// <summary>
        /// Gets the IApplicationrelocationv1s.
        /// </summary>
        public virtual IApplicationrelocationv1s Applicationrelocationv1s { get; private set; }

        /// <summary>
        /// Gets the IApplications.
        /// </summary>
        public virtual IApplications Applications { get; private set; }

        /// <summary>
        /// Gets the IApplicationadoxiohoursofserviceapplication.
        /// </summary>
        public virtual IApplicationadoxiohoursofserviceapplication Applicationadoxiohoursofserviceapplication { get; private set; }

        /// <summary>
        /// Gets the IPmuarea.
        /// </summary>
        public virtual IPmuarea Pmuarea { get; private set; }

        /// <summary>
        /// Gets the IBpfadoxioapplicationadoxiolqrlicencetransferbpf.
        /// </summary>
        public virtual IBpfadoxioapplicationadoxiolqrlicencetransferbpf Bpfadoxioapplicationadoxiolqrlicencetransferbpf { get; private set; }

        /// <summary>
        /// Gets the IApplicationstructurechangev1s.
        /// </summary>
        public virtual IApplicationstructurechangev1s Applicationstructurechangev1s { get; private set; }

        /// <summary>
        /// Gets the IApplicationtermsconditionslimitations.
        /// </summary>
        public virtual IApplicationtermsconditionslimitations Applicationtermsconditionslimitations { get; private set; }

        /// <summary>
        /// Gets the IEndorsement.
        /// </summary>
        public virtual IEndorsement Endorsement { get; private set; }

        /// <summary>
        /// Gets the IApplicationtransferownershipv1s.
        /// </summary>
        public virtual IApplicationtransferownershipv1s Applicationtransferownershipv1s { get; private set; }

        /// <summary>
        /// Gets the IApplicationtypecontents.
        /// </summary>
        public virtual IApplicationtypecontents Applicationtypecontents { get; private set; }

        /// <summary>
        /// Gets the IApplicationtypefeeschedules.
        /// </summary>
        public virtual IApplicationtypefeeschedules Applicationtypefeeschedules { get; private set; }

        /// <summary>
        /// Gets the IApplicationtypes.
        /// </summary>
        public virtual IApplicationtypes Applicationtypes { get; private set; }

        /// <summary>
        /// Gets the IApplicationtypeadoxiohoursofserviceapplicationtype.
        /// </summary>
        public virtual IApplicationtypeadoxiohoursofserviceapplicationtype Applicationtypeadoxiohoursofserviceapplicationtype { get; private set; }

        /// <summary>
        /// Gets the IApplicationtypeadoxiohoursofservicesdefaultapplicationtype.
        /// </summary>
        public virtual IApplicationtypeadoxiohoursofservicesdefaultapplicationtype Applicationtypeadoxiohoursofservicesdefaultapplicationtype { get; private set; }

        /// <summary>
        /// Gets the IApplicationtypeadoxioproratedlicencefeescheduleapplicationtype.
        /// </summary>
        public virtual IApplicationtypeadoxioproratedlicencefeescheduleapplicationtype Applicationtypeadoxioproratedlicencefeescheduleapplicationtype { get; private set; }

        /// <summary>
        /// Gets the IApplicationtypeadoxiotermsconditionslimitationspresetapplicationtype.
        /// </summary>
        public virtual IApplicationtypeadoxiotermsconditionslimitationspresetapplicationtype Applicationtypeadoxiotermsconditionslimitationspresetapplicationtype { get; private set; }

        /// <summary>
        /// Gets the IFylicencefeeproduct.
        /// </summary>
        public virtual IFylicencefeeproduct Fylicencefeeproduct { get; private set; }

        /// <summary>
        /// Gets the IAreas.
        /// </summary>
        public virtual IAreas Areas { get; private set; }

        /// <summary>
        /// Gets the IAreaadoxioinspectorreportarea.
        /// </summary>
        public virtual IAreaadoxioinspectorreportarea Areaadoxioinspectorreportarea { get; private set; }

        /// <summary>
        /// Gets the IPmuareaid.
        /// </summary>
        public virtual IPmuareaid Pmuareaid { get; private set; }

        /// <summary>
        /// Gets the IAuditlogrequests.
        /// </summary>
        public virtual IAuditlogrequests Auditlogrequests { get; private set; }

        /// <summary>
        /// Gets the IBusinessaccounts.
        /// </summary>
        public virtual IBusinessaccounts Businessaccounts { get; private set; }

        /// <summary>
        /// Gets the ICannabisinventoryreports.
        /// </summary>
        public virtual ICannabisinventoryreports Cannabisinventoryreports { get; private set; }

        /// <summary>
        /// Gets the ICannabismonthlyreports.
        /// </summary>
        public virtual ICannabismonthlyreports Cannabismonthlyreports { get; private set; }

        /// <summary>
        /// Gets the ICannabisproductadmins.
        /// </summary>
        public virtual ICannabisproductadmins Cannabisproductadmins { get; private set; }

        /// <summary>
        /// Gets the ICitydistricts.
        /// </summary>
        public virtual ICitydistricts Citydistricts { get; private set; }

        /// <summary>
        /// Gets the IComplaints.
        /// </summary>
        public virtual IComplaints Complaints { get; private set; }

        /// <summary>
        /// Gets the IComplianceinvestigations.
        /// </summary>
        public virtual IComplianceinvestigations Complianceinvestigations { get; private set; }

        /// <summary>
        /// Gets the ICompliancemeetings.
        /// </summary>
        public virtual ICompliancemeetings Compliancemeetings { get; private set; }

        /// <summary>
        /// Gets the IContraventionadmins.
        /// </summary>
        public virtual IContraventionadmins Contraventionadmins { get; private set; }

        /// <summary>
        /// Gets the IContraventions.
        /// </summary>
        public virtual IContraventions Contraventions { get; private set; }

        /// <summary>
        /// Gets the ICorporatehistorysummaries.
        /// </summary>
        public virtual ICorporatehistorysummaries Corporatehistorysummaries { get; private set; }

        /// <summary>
        /// Gets the ICorporateroles.
        /// </summary>
        public virtual ICorporateroles Corporateroles { get; private set; }

        /// <summary>
        /// Gets the ICustomautonumberdefinitions.
        /// </summary>
        public virtual ICustomautonumberdefinitions Customautonumberdefinitions { get; private set; }

        /// <summary>
        /// Gets the ICustomautonumberrequests.
        /// </summary>
        public virtual ICustomautonumberrequests Customautonumberrequests { get; private set; }

        /// <summary>
        /// Gets the IDocumentadmins.
        /// </summary>
        public virtual IDocumentadmins Documentadmins { get; private set; }

        /// <summary>
        /// Gets the IDocuments.
        /// </summary>
        public virtual IDocuments Documents { get; private set; }

        /// <summary>
        /// Gets the IEndorsements.
        /// </summary>
        public virtual IEndorsements Endorsements { get; private set; }

        /// <summary>
        /// Gets the IEndorsementadoxioapplicationtermsconditionslimitationendorsement.
        /// </summary>
        public virtual IEndorsementadoxioapplicationtermsconditionslimitationendorsement Endorsementadoxioapplicationtermsconditionslimitationendorsement { get; private set; }

        /// <summary>
        /// Gets the IEndorsementadoxiohoursofserviceendorsement.
        /// </summary>
        public virtual IEndorsementadoxiohoursofserviceendorsement Endorsementadoxiohoursofserviceendorsement { get; private set; }

        /// <summary>
        /// Gets the IEndorsementadoxioserviceareaendorsement.
        /// </summary>
        public virtual IEndorsementadoxioserviceareaendorsement Endorsementadoxioserviceareaendorsement { get; private set; }

        /// <summary>
        /// Gets the IEnforcementactionbpfs.
        /// </summary>
        public virtual IEnforcementactionbpfs Enforcementactionbpfs { get; private set; }

        /// <summary>
        /// Gets the IEnforcementactions.
        /// </summary>
        public virtual IEnforcementactions Enforcementactions { get; private set; }

        /// <summary>
        /// Gets the IEstablishmentincidents.
        /// </summary>
        public virtual IEstablishmentincidents Establishmentincidents { get; private set; }

        /// <summary>
        /// Gets the IEstablishments.
        /// </summary>
        public virtual IEstablishments Establishments { get; private set; }

        /// <summary>
        /// Gets the IEstablishmentadoxiohoursofserviceestablishment.
        /// </summary>
        public virtual IEstablishmentadoxiohoursofserviceestablishment Establishmentadoxiohoursofserviceestablishment { get; private set; }

        /// <summary>
        /// Gets the IEstablishmentwatchwords.
        /// </summary>
        public virtual IEstablishmentwatchwords Establishmentwatchwords { get; private set; }

        /// <summary>
        /// Gets the IEvents.
        /// </summary>
        public virtual IEvents Events { get; private set; }

        /// <summary>
        /// Gets the IEventschedules.
        /// </summary>
        public virtual IEventschedules Eventschedules { get; private set; }

        /// <summary>
        /// Gets the IExhibits.
        /// </summary>
        public virtual IExhibits Exhibits { get; private set; }

        /// <summary>
        /// Gets the IFederalreportexports.
        /// </summary>
        public virtual IFederalreportexports Federalreportexports { get; private set; }

        /// <summary>
        /// Gets the IFiainvestigationlogs.
        /// </summary>
        public virtual IFiainvestigationlogs Fiainvestigationlogs { get; private set; }

        /// <summary>
        /// Gets the IFormelementuploadfields.
        /// </summary>
        public virtual IFormelementuploadfields Formelementuploadfields { get; private set; }

        /// <summary>
        /// Gets the IFundingsources.
        /// </summary>
        public virtual IFundingsources Fundingsources { get; private set; }

        /// <summary>
        /// Gets the IHoursofservices.
        /// </summary>
        public virtual IHoursofservices Hoursofservices { get; private set; }

        /// <summary>
        /// Gets the IApplication.
        /// </summary>
        public virtual IApplication Application { get; private set; }

        /// <summary>
        /// Gets the IApplicationtype.
        /// </summary>
        public virtual IApplicationtype Applicationtype { get; private set; }

        /// <summary>
        /// Gets the IEstablishment.
        /// </summary>
        public virtual IEstablishment Establishment { get; private set; }

        /// <summary>
        /// Gets the IHoursofserviceasyncoperations.
        /// </summary>
        public virtual IHoursofserviceasyncoperations Hoursofserviceasyncoperations { get; private set; }

        /// <summary>
        /// Gets the IHoursofservicebulkdeletefailures.
        /// </summary>
        public virtual IHoursofservicebulkdeletefailures Hoursofservicebulkdeletefailures { get; private set; }

        /// <summary>
        /// Gets the IHoursofserviceduplicatebaserecord.
        /// </summary>
        public virtual IHoursofserviceduplicatebaserecord Hoursofserviceduplicatebaserecord { get; private set; }

        /// <summary>
        /// Gets the IHoursofserviceduplicatematchingrecord.
        /// </summary>
        public virtual IHoursofserviceduplicatematchingrecord Hoursofserviceduplicatematchingrecord { get; private set; }

        /// <summary>
        /// Gets the IHoursofservicemailboxtrackingfolders.
        /// </summary>
        public virtual IHoursofservicemailboxtrackingfolders Hoursofservicemailboxtrackingfolders { get; private set; }

        /// <summary>
        /// Gets the IHoursofserviceprincipalobjectattributeaccesses.
        /// </summary>
        public virtual IHoursofserviceprincipalobjectattributeaccesses Hoursofserviceprincipalobjectattributeaccesses { get; private set; }

        /// <summary>
        /// Gets the IHoursofserviceprocesssession.
        /// </summary>
        public virtual IHoursofserviceprocesssession Hoursofserviceprocesssession { get; private set; }

        /// <summary>
        /// Gets the IHoursofservicesyncerrors.
        /// </summary>
        public virtual IHoursofservicesyncerrors Hoursofservicesyncerrors { get; private set; }

        /// <summary>
        /// Gets the IInspectionid.
        /// </summary>
        public virtual IInspectionid Inspectionid { get; private set; }

        /// <summary>
        /// Gets the ILicence.
        /// </summary>
        public virtual ILicence Licence { get; private set; }

        /// <summary>
        /// Gets the IHoursofservicesdefaults.
        /// </summary>
        public virtual IHoursofservicesdefaults Hoursofservicesdefaults { get; private set; }

        /// <summary>
        /// Gets the IHoursofservicesdefaultasyncoperations.
        /// </summary>
        public virtual IHoursofservicesdefaultasyncoperations Hoursofservicesdefaultasyncoperations { get; private set; }

        /// <summary>
        /// Gets the IHoursofservicesdefaultbulkdeletefailures.
        /// </summary>
        public virtual IHoursofservicesdefaultbulkdeletefailures Hoursofservicesdefaultbulkdeletefailures { get; private set; }

        /// <summary>
        /// Gets the IHoursofservicesdefaultmailboxtrackingfolders.
        /// </summary>
        public virtual IHoursofservicesdefaultmailboxtrackingfolders Hoursofservicesdefaultmailboxtrackingfolders { get; private set; }

        /// <summary>
        /// Gets the IHoursofservicesdefaultprincipalobjectattributeaccesses.
        /// </summary>
        public virtual IHoursofservicesdefaultprincipalobjectattributeaccesses Hoursofservicesdefaultprincipalobjectattributeaccesses { get; private set; }

        /// <summary>
        /// Gets the IHoursofservicesdefaultprocesssession.
        /// </summary>
        public virtual IHoursofservicesdefaultprocesssession Hoursofservicesdefaultprocesssession { get; private set; }

        /// <summary>
        /// Gets the IHoursofservicesdefaultsyncerrors.
        /// </summary>
        public virtual IHoursofservicesdefaultsyncerrors Hoursofservicesdefaultsyncerrors { get; private set; }

        /// <summary>
        /// Gets the IIncidentadoxiolicencetypeset.
        /// </summary>
        public virtual IIncidentadoxiolicencetypeset Incidentadoxiolicencetypeset { get; private set; }

        /// <summary>
        /// Gets the IInspectioninspectorsset.
        /// </summary>
        public virtual IInspectioninspectorsset Inspectioninspectorsset { get; private set; }

        /// <summary>
        /// Gets the IInspectionreactivationhistories.
        /// </summary>
        public virtual IInspectionreactivationhistories Inspectionreactivationhistories { get; private set; }

        /// <summary>
        /// Gets the IInspectorcommentsrollups.
        /// </summary>
        public virtual IInspectorcommentsrollups Inspectorcommentsrollups { get; private set; }

        /// <summary>
        /// Gets the IInspectorreports.
        /// </summary>
        public virtual IInspectorreports Inspectorreports { get; private set; }

        /// <summary>
        /// Gets the IArea.
        /// </summary>
        public virtual IArea Area { get; private set; }

        /// <summary>
        /// Gets the IInspector.
        /// </summary>
        public virtual IInspector Inspector { get; private set; }

        /// <summary>
        /// Gets the IInspectorreportasyncoperations.
        /// </summary>
        public virtual IInspectorreportasyncoperations Inspectorreportasyncoperations { get; private set; }

        /// <summary>
        /// Gets the IInspectorreportbulkdeletefailures.
        /// </summary>
        public virtual IInspectorreportbulkdeletefailures Inspectorreportbulkdeletefailures { get; private set; }

        /// <summary>
        /// Gets the IInspectorreportduplicatebaserecord.
        /// </summary>
        public virtual IInspectorreportduplicatebaserecord Inspectorreportduplicatebaserecord { get; private set; }

        /// <summary>
        /// Gets the IInspectorreportduplicatematchingrecord.
        /// </summary>
        public virtual IInspectorreportduplicatematchingrecord Inspectorreportduplicatematchingrecord { get; private set; }

        /// <summary>
        /// Gets the IInspectorreportmailboxtrackingfolders.
        /// </summary>
        public virtual IInspectorreportmailboxtrackingfolders Inspectorreportmailboxtrackingfolders { get; private set; }

        /// <summary>
        /// Gets the IInspectorreportprincipalobjectattributeaccesses.
        /// </summary>
        public virtual IInspectorreportprincipalobjectattributeaccesses Inspectorreportprincipalobjectattributeaccesses { get; private set; }

        /// <summary>
        /// Gets the IInspectorreportprocesssession.
        /// </summary>
        public virtual IInspectorreportprocesssession Inspectorreportprocesssession { get; private set; }

        /// <summary>
        /// Gets the IInspectorreportsyncerrors.
        /// </summary>
        public virtual IInspectorreportsyncerrors Inspectorreportsyncerrors { get; private set; }

        /// <summary>
        /// Gets the IRegion.
        /// </summary>
        public virtual IRegion Region { get; private set; }

        /// <summary>
        /// Gets the IInterests.
        /// </summary>
        public virtual IInterests Interests { get; private set; }

        /// <summary>
        /// Gets the IInvestigationactivities.
        /// </summary>
        public virtual IInvestigationactivities Investigationactivities { get; private set; }

        /// <summary>
        /// Gets the IInvestigationreactivationhistories.
        /// </summary>
        public virtual IInvestigationreactivationhistories Investigationreactivationhistories { get; private set; }

        /// <summary>
        /// Gets the IInvestigations.
        /// </summary>
        public virtual IInvestigations Investigations { get; private set; }

        /// <summary>
        /// Gets the ILdborders.
        /// </summary>
        public virtual ILdborders Ldborders { get; private set; }

        /// <summary>
        /// Gets the ILegalentities.
        /// </summary>
        public virtual ILegalentities Legalentities { get; private set; }

        /// <summary>
        /// Gets the ILicenceldbordertotalhistories.
        /// </summary>
        public virtual ILicenceldbordertotalhistories Licenceldbordertotalhistories { get; private set; }

        /// <summary>
        /// Gets the ILicenceses.
        /// </summary>
        public virtual ILicenceses Licenceses { get; private set; }

        /// <summary>
        /// Gets the ILicencesadoxiohoursofservicelicence.
        /// </summary>
        public virtual ILicencesadoxiohoursofservicelicence Licencesadoxiohoursofservicelicence { get; private set; }

        /// <summary>
        /// Gets the ILicencesoffsitestoragelocations.
        /// </summary>
        public virtual ILicencesoffsitestoragelocations Licencesoffsitestoragelocations { get; private set; }

        /// <summary>
        /// Gets the ILicencesubcategories.
        /// </summary>
        public virtual ILicencesubcategories Licencesubcategories { get; private set; }

        /// <summary>
        /// Gets the ILicencefeeproduct.
        /// </summary>
        public virtual ILicencefeeproduct Licencefeeproduct { get; private set; }

        /// <summary>
        /// Gets the ILicencesubcategoryadoxioproratedlicencefeeschedulelicencesubcategory.
        /// </summary>
        public virtual ILicencesubcategoryadoxioproratedlicencefeeschedulelicencesubcategory Licencesubcategoryadoxioproratedlicencefeeschedulelicencesubcategory { get; private set; }

        /// <summary>
        /// Gets the ILicencetypes.
        /// </summary>
        public virtual ILicencetypes Licencetypes { get; private set; }

        /// <summary>
        /// Gets the ILicencetypesapplicationtypesset.
        /// </summary>
        public virtual ILicencetypesapplicationtypesset Licencetypesapplicationtypesset { get; private set; }

        /// <summary>
        /// Gets the ILicenseechangelogs.
        /// </summary>
        public virtual ILicenseechangelogs Licenseechangelogs { get; private set; }

        /// <summary>
        /// Gets the ILoans.
        /// </summary>
        public virtual ILoans Loans { get; private set; }

        /// <summary>
        /// Gets the ILocalgovindigenousnations.
        /// </summary>
        public virtual ILocalgovindigenousnations Localgovindigenousnations { get; private set; }

        /// <summary>
        /// Gets the ILocalgovindigenousnationactivityparties.
        /// </summary>
        public virtual ILocalgovindigenousnationactivityparties Localgovindigenousnationactivityparties { get; private set; }

        /// <summary>
        /// Gets the ILqrlicencetransferbpfs.
        /// </summary>
        public virtual ILqrlicencetransferbpfs Lqrlicencetransferbpfs { get; private set; }

        /// <summary>
        /// Gets the ILqrlicencetransferbpfasyncoperations.
        /// </summary>
        public virtual ILqrlicencetransferbpfasyncoperations Lqrlicencetransferbpfasyncoperations { get; private set; }

        /// <summary>
        /// Gets the ILqrlicencetransferbpfbulkdeletefailures.
        /// </summary>
        public virtual ILqrlicencetransferbpfbulkdeletefailures Lqrlicencetransferbpfbulkdeletefailures { get; private set; }

        /// <summary>
        /// Gets the ILqrlicencetransferbpfmailboxtrackingfolders.
        /// </summary>
        public virtual ILqrlicencetransferbpfmailboxtrackingfolders Lqrlicencetransferbpfmailboxtrackingfolders { get; private set; }

        /// <summary>
        /// Gets the ILqrlicencetransferbpfprincipalobjectattributeaccesses.
        /// </summary>
        public virtual ILqrlicencetransferbpfprincipalobjectattributeaccesses Lqrlicencetransferbpfprincipalobjectattributeaccesses { get; private set; }

        /// <summary>
        /// Gets the ILqrlicencetransferbpfprocesssession.
        /// </summary>
        public virtual ILqrlicencetransferbpfprocesssession Lqrlicencetransferbpfprocesssession { get; private set; }

        /// <summary>
        /// Gets the ILqrlicencetransferbpfsyncerrors.
        /// </summary>
        public virtual ILqrlicencetransferbpfsyncerrors Lqrlicencetransferbpfsyncerrors { get; private set; }

        /// <summary>
        /// Gets the ILqrlicencetransferbpfworkflowlogs.
        /// </summary>
        public virtual ILqrlicencetransferbpfworkflowlogs Lqrlicencetransferbpfworkflowlogs { get; private set; }

        /// <summary>
        /// Gets the IBpfadoxioapplicationid.
        /// </summary>
        public virtual IBpfadoxioapplicationid Bpfadoxioapplicationid { get; private set; }

        /// <summary>
        /// Gets the IOffsitestorages.
        /// </summary>
        public virtual IOffsitestorages Offsitestorages { get; private set; }

        /// <summary>
        /// Gets the ILicenceid.
        /// </summary>
        public virtual ILicenceid Licenceid { get; private set; }

        /// <summary>
        /// Gets the IOffsitestorageasyncoperations.
        /// </summary>
        public virtual IOffsitestorageasyncoperations Offsitestorageasyncoperations { get; private set; }

        /// <summary>
        /// Gets the IOffsitestoragebulkdeletefailures.
        /// </summary>
        public virtual IOffsitestoragebulkdeletefailures Offsitestoragebulkdeletefailures { get; private set; }

        /// <summary>
        /// Gets the IOffsitestorageduplicatebaserecord.
        /// </summary>
        public virtual IOffsitestorageduplicatebaserecord Offsitestorageduplicatebaserecord { get; private set; }

        /// <summary>
        /// Gets the IOffsitestorageduplicatematchingrecord.
        /// </summary>
        public virtual IOffsitestorageduplicatematchingrecord Offsitestorageduplicatematchingrecord { get; private set; }

        /// <summary>
        /// Gets the IOffsitestoragemailboxtrackingfolders.
        /// </summary>
        public virtual IOffsitestoragemailboxtrackingfolders Offsitestoragemailboxtrackingfolders { get; private set; }

        /// <summary>
        /// Gets the IOffsitestorageprincipalobjectattributeaccesses.
        /// </summary>
        public virtual IOffsitestorageprincipalobjectattributeaccesses Offsitestorageprincipalobjectattributeaccesses { get; private set; }

        /// <summary>
        /// Gets the IOffsitestorageprocesssession.
        /// </summary>
        public virtual IOffsitestorageprocesssession Offsitestorageprocesssession { get; private set; }

        /// <summary>
        /// Gets the IOffsitestoragesyncerrors.
        /// </summary>
        public virtual IOffsitestoragesyncerrors Offsitestoragesyncerrors { get; private set; }

        /// <summary>
        /// Gets the IPersonalhistorysummaries.
        /// </summary>
        public virtual IPersonalhistorysummaries Personalhistorysummaries { get; private set; }

        /// <summary>
        /// Gets the IPmuareas.
        /// </summary>
        public virtual IPmuareas Pmuareas { get; private set; }

        /// <summary>
        /// Gets the IManufacturinginspectorid.
        /// </summary>
        public virtual IManufacturinginspectorid Manufacturinginspectorid { get; private set; }

        /// <summary>
        /// Gets the IPmuareaadoxioapplicationpmuarea.
        /// </summary>
        public virtual IPmuareaadoxioapplicationpmuarea Pmuareaadoxioapplicationpmuarea { get; private set; }

        /// <summary>
        /// Gets the IPmuareaareas.
        /// </summary>
        public virtual IPmuareaareas Pmuareaareas { get; private set; }

        /// <summary>
        /// Gets the IPmuareaasyncoperations.
        /// </summary>
        public virtual IPmuareaasyncoperations Pmuareaasyncoperations { get; private set; }

        /// <summary>
        /// Gets the IPmuareabulkdeletefailures.
        /// </summary>
        public virtual IPmuareabulkdeletefailures Pmuareabulkdeletefailures { get; private set; }

        /// <summary>
        /// Gets the IPmuareaduplicatebaserecord.
        /// </summary>
        public virtual IPmuareaduplicatebaserecord Pmuareaduplicatebaserecord { get; private set; }

        /// <summary>
        /// Gets the IPmuareaduplicatematchingrecord.
        /// </summary>
        public virtual IPmuareaduplicatematchingrecord Pmuareaduplicatematchingrecord { get; private set; }

        /// <summary>
        /// Gets the IPmuareainspections.
        /// </summary>
        public virtual IPmuareainspections Pmuareainspections { get; private set; }

        /// <summary>
        /// Gets the IPmuarealicences.
        /// </summary>
        public virtual IPmuarealicences Pmuarealicences { get; private set; }

        /// <summary>
        /// Gets the IPmuareamailboxtrackingfolders.
        /// </summary>
        public virtual IPmuareamailboxtrackingfolders Pmuareamailboxtrackingfolders { get; private set; }

        /// <summary>
        /// Gets the IPmuareamarketevents.
        /// </summary>
        public virtual IPmuareamarketevents Pmuareamarketevents { get; private set; }

        /// <summary>
        /// Gets the IPmuareaprincipalobjectattributeaccesses.
        /// </summary>
        public virtual IPmuareaprincipalobjectattributeaccesses Pmuareaprincipalobjectattributeaccesses { get; private set; }

        /// <summary>
        /// Gets the IPmuareaprocesssession.
        /// </summary>
        public virtual IPmuareaprocesssession Pmuareaprocesssession { get; private set; }

        /// <summary>
        /// Gets the IPmuareasyncerrors.
        /// </summary>
        public virtual IPmuareasyncerrors Pmuareasyncerrors { get; private set; }

        /// <summary>
        /// Gets the IRegionalmanagerid.
        /// </summary>
        public virtual IRegionalmanagerid Regionalmanagerid { get; private set; }

        /// <summary>
        /// Gets the IPolicejurisdictions.
        /// </summary>
        public virtual IPolicejurisdictions Policejurisdictions { get; private set; }

        /// <summary>
        /// Gets the IPolicydocuments.
        /// </summary>
        public virtual IPolicydocuments Policydocuments { get; private set; }

        /// <summary>
        /// Gets the IPostalcodes.
        /// </summary>
        public virtual IPostalcodes Postalcodes { get; private set; }

        /// <summary>
        /// Gets the IPreviousaddresses.
        /// </summary>
        public virtual IPreviousaddresses Previousaddresses { get; private set; }

        /// <summary>
        /// Gets the IProratedlicencefeeschedules.
        /// </summary>
        public virtual IProratedlicencefeeschedules Proratedlicencefeeschedules { get; private set; }

        /// <summary>
        /// Gets the ILicencesubcategory.
        /// </summary>
        public virtual ILicencesubcategory Licencesubcategory { get; private set; }

        /// <summary>
        /// Gets the IProratedlicencefeescheduleasyncoperations.
        /// </summary>
        public virtual IProratedlicencefeescheduleasyncoperations Proratedlicencefeescheduleasyncoperations { get; private set; }

        /// <summary>
        /// Gets the IProratedlicencefeeschedulebulkdeletefailures.
        /// </summary>
        public virtual IProratedlicencefeeschedulebulkdeletefailures Proratedlicencefeeschedulebulkdeletefailures { get; private set; }

        /// <summary>
        /// Gets the IProratedlicencefeeschedulemailboxtrackingfolders.
        /// </summary>
        public virtual IProratedlicencefeeschedulemailboxtrackingfolders Proratedlicencefeeschedulemailboxtrackingfolders { get; private set; }

        /// <summary>
        /// Gets the IProratedlicencefeescheduleprincipalobjectattributeaccesses.
        /// </summary>
        public virtual IProratedlicencefeescheduleprincipalobjectattributeaccesses Proratedlicencefeescheduleprincipalobjectattributeaccesses { get; private set; }

        /// <summary>
        /// Gets the IProratedlicencefeescheduleprocesssession.
        /// </summary>
        public virtual IProratedlicencefeescheduleprocesssession Proratedlicencefeescheduleprocesssession { get; private set; }

        /// <summary>
        /// Gets the IProratedlicencefeeschedulesyncerrors.
        /// </summary>
        public virtual IProratedlicencefeeschedulesyncerrors Proratedlicencefeeschedulesyncerrors { get; private set; }

        /// <summary>
        /// Gets the IRegions.
        /// </summary>
        public virtual IRegions Regions { get; private set; }

        /// <summary>
        /// Gets the IRegionadoxioinspectorreportregion.
        /// </summary>
        public virtual IRegionadoxioinspectorreportregion Regionadoxioinspectorreportregion { get; private set; }

        /// <summary>
        /// Gets the IRelatedparties.
        /// </summary>
        public virtual IRelatedparties Relatedparties { get; private set; }

        /// <summary>
        /// Gets the IRmreviews.
        /// </summary>
        public virtual IRmreviews Rmreviews { get; private set; }

        /// <summary>
        /// Gets the IServiceareas.
        /// </summary>
        public virtual IServiceareas Serviceareas { get; private set; }

        /// <summary>
        /// Gets the ISettings.
        /// </summary>
        public virtual ISettings Settings { get; private set; }

        /// <summary>
        /// Gets the ISpddatarows.
        /// </summary>
        public virtual ISpddatarows Spddatarows { get; private set; }

        /// <summary>
        /// Gets the ISpdexportses.
        /// </summary>
        public virtual ISpdexportses Spdexportses { get; private set; }

        /// <summary>
        /// Gets the ITaxandaccountings.
        /// </summary>
        public virtual ITaxandaccountings Taxandaccountings { get; private set; }

        /// <summary>
        /// Gets the ITermsconditionslimitationspresets.
        /// </summary>
        public virtual ITermsconditionslimitationspresets Termsconditionslimitationspresets { get; private set; }

        /// <summary>
        /// Gets the ITerritories.
        /// </summary>
        public virtual ITerritories Territories { get; private set; }

        /// <summary>
        /// Gets the ITiedhouseassociations.
        /// </summary>
        public virtual ITiedhouseassociations Tiedhouseassociations { get; private set; }

        /// <summary>
        /// Gets the ITiedhouseconnections.
        /// </summary>
        public virtual ITiedhouseconnections Tiedhouseconnections { get; private set; }

        /// <summary>
        /// Gets the IWitnesses.
        /// </summary>
        public virtual IWitnesses Witnesses { get; private set; }

        /// <summary>
        /// Gets the IWorkerinvoicehistories.
        /// </summary>
        public virtual IWorkerinvoicehistories Workerinvoicehistories { get; private set; }

        /// <summary>
        /// Gets the IWorkers.
        /// </summary>
        public virtual IWorkers Workers { get; private set; }

        /// <summary>
        /// Gets the IRegardingobjectidadoxiohoursofservice.
        /// </summary>
        public virtual IRegardingobjectidadoxiohoursofservice Regardingobjectidadoxiohoursofservice { get; private set; }

        /// <summary>
        /// Gets the IRegardingobjectidadoxiohoursofservicesdefault.
        /// </summary>
        public virtual IRegardingobjectidadoxiohoursofservicesdefault Regardingobjectidadoxiohoursofservicesdefault { get; private set; }

        /// <summary>
        /// Gets the IRegardingobjectidadoxioinspectorreport.
        /// </summary>
        public virtual IRegardingobjectidadoxioinspectorreport Regardingobjectidadoxioinspectorreport { get; private set; }

        /// <summary>
        /// Gets the IRegardingobjectidadoxiolqrlicencetransferbpf.
        /// </summary>
        public virtual IRegardingobjectidadoxiolqrlicencetransferbpf Regardingobjectidadoxiolqrlicencetransferbpf { get; private set; }

        /// <summary>
        /// Gets the IRegardingobjectidadoxiooffsitestorage.
        /// </summary>
        public virtual IRegardingobjectidadoxiooffsitestorage Regardingobjectidadoxiooffsitestorage { get; private set; }

        /// <summary>
        /// Gets the IRegardingobjectidadoxiopmuarea.
        /// </summary>
        public virtual IRegardingobjectidadoxiopmuarea Regardingobjectidadoxiopmuarea { get; private set; }

        /// <summary>
        /// Gets the IRegardingobjectidadoxioproratedlicencefeeschedule.
        /// </summary>
        public virtual IRegardingobjectidadoxioproratedlicencefeeschedule Regardingobjectidadoxioproratedlicencefeeschedule { get; private set; }

        /// <summary>
        /// Gets the IBusinessunitadoxiohoursofservice.
        /// </summary>
        public virtual IBusinessunitadoxiohoursofservice Businessunitadoxiohoursofservice { get; private set; }

        /// <summary>
        /// Gets the IBusinessunitadoxiohoursofservicesdefault.
        /// </summary>
        public virtual IBusinessunitadoxiohoursofservicesdefault Businessunitadoxiohoursofservicesdefault { get; private set; }

        /// <summary>
        /// Gets the IBusinessunitadoxioinspectorreport.
        /// </summary>
        public virtual IBusinessunitadoxioinspectorreport Businessunitadoxioinspectorreport { get; private set; }

        /// <summary>
        /// Gets the IBusinessunitadoxiooffsitestorage.
        /// </summary>
        public virtual IBusinessunitadoxiooffsitestorage Businessunitadoxiooffsitestorage { get; private set; }

        /// <summary>
        /// Gets the IBusinessunitadoxiopmuarea.
        /// </summary>
        public virtual IBusinessunitadoxiopmuarea Businessunitadoxiopmuarea { get; private set; }

        /// <summary>
        /// Gets the IBusinessunitadoxioproratedlicencefeeschedule.
        /// </summary>
        public virtual IBusinessunitadoxioproratedlicencefeeschedule Businessunitadoxioproratedlicencefeeschedule { get; private set; }

        /// <summary>
        /// Gets the IContacts.
        /// </summary>
        public virtual IContacts Contacts { get; private set; }

        /// <summary>
        /// Gets the IBaserecordidadoxiohoursofservice.
        /// </summary>
        public virtual IBaserecordidadoxiohoursofservice Baserecordidadoxiohoursofservice { get; private set; }

        /// <summary>
        /// Gets the IBaserecordidadoxioinspectorreport.
        /// </summary>
        public virtual IBaserecordidadoxioinspectorreport Baserecordidadoxioinspectorreport { get; private set; }

        /// <summary>
        /// Gets the IBaserecordidadoxiooffsitestorage.
        /// </summary>
        public virtual IBaserecordidadoxiooffsitestorage Baserecordidadoxiooffsitestorage { get; private set; }

        /// <summary>
        /// Gets the IBaserecordidadoxiopmuarea.
        /// </summary>
        public virtual IBaserecordidadoxiopmuarea Baserecordidadoxiopmuarea { get; private set; }

        /// <summary>
        /// Gets the IDuplicaterecordidadoxiohoursofservice.
        /// </summary>
        public virtual IDuplicaterecordidadoxiohoursofservice Duplicaterecordidadoxiohoursofservice { get; private set; }

        /// <summary>
        /// Gets the IDuplicaterecordidadoxioinspectorreport.
        /// </summary>
        public virtual IDuplicaterecordidadoxioinspectorreport Duplicaterecordidadoxioinspectorreport { get; private set; }

        /// <summary>
        /// Gets the IDuplicaterecordidadoxiooffsitestorage.
        /// </summary>
        public virtual IDuplicaterecordidadoxiooffsitestorage Duplicaterecordidadoxiooffsitestorage { get; private set; }

        /// <summary>
        /// Gets the IDuplicaterecordidadoxiopmuarea.
        /// </summary>
        public virtual IDuplicaterecordidadoxiopmuarea Duplicaterecordidadoxiopmuarea { get; private set; }

        /// <summary>
        /// Gets the IEntitydefinitions.
        /// </summary>
        public virtual IEntitydefinitions Entitydefinitions { get; private set; }

        /// <summary>
        /// Gets the IGlobaloptionsetdefinitions.
        /// </summary>
        public virtual IGlobaloptionsetdefinitions Globaloptionsetdefinitions { get; private set; }

        /// <summary>
        /// Gets the IInspectionhoursofservice.
        /// </summary>
        public virtual IInspectionhoursofservice Inspectionhoursofservice { get; private set; }

        /// <summary>
        /// Gets the IInvoices.
        /// </summary>
        public virtual IInvoices Invoices { get; private set; }

        /// <summary>
        /// Gets the ILeads.
        /// </summary>
        public virtual ILeads Leads { get; private set; }

        /// <summary>
        /// Gets the ILists.
        /// </summary>
        public virtual ILists Lists { get; private set; }

        /// <summary>
        /// Gets the IOrganizationadoxiolqrlicencetransferbpf.
        /// </summary>
        public virtual IOrganizationadoxiolqrlicencetransferbpf Organizationadoxiolqrlicencetransferbpf { get; private set; }

        /// <summary>
        /// Gets the IObjectidadoxiohoursofservice.
        /// </summary>
        public virtual IObjectidadoxiohoursofservice Objectidadoxiohoursofservice { get; private set; }

        /// <summary>
        /// Gets the IObjectidadoxiohoursofservicesdefault.
        /// </summary>
        public virtual IObjectidadoxiohoursofservicesdefault Objectidadoxiohoursofservicesdefault { get; private set; }

        /// <summary>
        /// Gets the IObjectidadoxioinspectorreport.
        /// </summary>
        public virtual IObjectidadoxioinspectorreport Objectidadoxioinspectorreport { get; private set; }

        /// <summary>
        /// Gets the IObjectidadoxiolqrlicencetransferbpf.
        /// </summary>
        public virtual IObjectidadoxiolqrlicencetransferbpf Objectidadoxiolqrlicencetransferbpf { get; private set; }

        /// <summary>
        /// Gets the IObjectidadoxiooffsitestorage.
        /// </summary>
        public virtual IObjectidadoxiooffsitestorage Objectidadoxiooffsitestorage { get; private set; }

        /// <summary>
        /// Gets the IObjectidadoxiopmuarea.
        /// </summary>
        public virtual IObjectidadoxiopmuarea Objectidadoxiopmuarea { get; private set; }

        /// <summary>
        /// Gets the IObjectidadoxioproratedlicencefeeschedule.
        /// </summary>
        public virtual IObjectidadoxioproratedlicencefeeschedule Objectidadoxioproratedlicencefeeschedule { get; private set; }

        /// <summary>
        /// Gets the ILkadoxiolqrlicencetransferbpfactivestageid.
        /// </summary>
        public virtual ILkadoxiolqrlicencetransferbpfactivestageid Lkadoxiolqrlicencetransferbpfactivestageid { get; private set; }

        /// <summary>
        /// Gets the IProductadoxioapplicationtypefylicencefeeproduct.
        /// </summary>
        public virtual IProductadoxioapplicationtypefylicencefeeproduct Productadoxioapplicationtypefylicencefeeproduct { get; private set; }

        /// <summary>
        /// Gets the IProductadoxiolicencesubcategorylicencefeeproduct.
        /// </summary>
        public virtual IProductadoxiolicencesubcategorylicencefeeproduct Productadoxiolicencesubcategorylicencefeeproduct { get; private set; }

        /// <summary>
        /// Gets the ISavedqueries.
        /// </summary>
        public virtual ISavedqueries Savedqueries { get; private set; }

        /// <summary>
        /// Gets the ISharepointdocumentlocations.
        /// </summary>
        public virtual ISharepointdocumentlocations Sharepointdocumentlocations { get; private set; }

        /// <summary>
        /// Gets the ISharepointsites.
        /// </summary>
        public virtual ISharepointsites Sharepointsites { get; private set; }

        /// <summary>
        /// Gets the ISystemforms.
        /// </summary>
        public virtual ISystemforms Systemforms { get; private set; }

        /// <summary>
        /// Gets the ISystemusers.
        /// </summary>
        public virtual ISystemusers Systemusers { get; private set; }

        /// <summary>
        /// Gets the IMfginspectorpmuareas.
        /// </summary>
        public virtual IMfginspectorpmuareas Mfginspectorpmuareas { get; private set; }

        /// <summary>
        /// Gets the IRegionalmanagerpmuareas.
        /// </summary>
        public virtual IRegionalmanagerpmuareas Regionalmanagerpmuareas { get; private set; }

        /// <summary>
        /// Gets the ISystemuseradoxioinspectorreportinspector.
        /// </summary>
        public virtual ISystemuseradoxioinspectorreportinspector Systemuseradoxioinspectorreportinspector { get; private set; }

        /// <summary>
        /// Gets the ILkadoxiohoursofservicecreatedby.
        /// </summary>
        public virtual ILkadoxiohoursofservicecreatedby Lkadoxiohoursofservicecreatedby { get; private set; }

        /// <summary>
        /// Gets the ILkadoxiohoursofservicecreatedonbehalfby.
        /// </summary>
        public virtual ILkadoxiohoursofservicecreatedonbehalfby Lkadoxiohoursofservicecreatedonbehalfby { get; private set; }

        /// <summary>
        /// Gets the ILkadoxiohoursofservicemodifiedby.
        /// </summary>
        public virtual ILkadoxiohoursofservicemodifiedby Lkadoxiohoursofservicemodifiedby { get; private set; }

        /// <summary>
        /// Gets the ILkadoxiohoursofservicemodifiedonbehalfby.
        /// </summary>
        public virtual ILkadoxiohoursofservicemodifiedonbehalfby Lkadoxiohoursofservicemodifiedonbehalfby { get; private set; }

        /// <summary>
        /// Gets the ILkadoxiohoursofservicesdefaultcreatedby.
        /// </summary>
        public virtual ILkadoxiohoursofservicesdefaultcreatedby Lkadoxiohoursofservicesdefaultcreatedby { get; private set; }

        /// <summary>
        /// Gets the ILkadoxiohoursofservicesdefaultcreatedonbehalfby.
        /// </summary>
        public virtual ILkadoxiohoursofservicesdefaultcreatedonbehalfby Lkadoxiohoursofservicesdefaultcreatedonbehalfby { get; private set; }

        /// <summary>
        /// Gets the ILkadoxiohoursofservicesdefaultmodifiedby.
        /// </summary>
        public virtual ILkadoxiohoursofservicesdefaultmodifiedby Lkadoxiohoursofservicesdefaultmodifiedby { get; private set; }

        /// <summary>
        /// Gets the ILkadoxiohoursofservicesdefaultmodifiedonbehalfby.
        /// </summary>
        public virtual ILkadoxiohoursofservicesdefaultmodifiedonbehalfby Lkadoxiohoursofservicesdefaultmodifiedonbehalfby { get; private set; }

        /// <summary>
        /// Gets the ILkadoxioinspectorreportcreatedby.
        /// </summary>
        public virtual ILkadoxioinspectorreportcreatedby Lkadoxioinspectorreportcreatedby { get; private set; }

        /// <summary>
        /// Gets the ILkadoxioinspectorreportcreatedonbehalfby.
        /// </summary>
        public virtual ILkadoxioinspectorreportcreatedonbehalfby Lkadoxioinspectorreportcreatedonbehalfby { get; private set; }

        /// <summary>
        /// Gets the ILkadoxioinspectorreportmodifiedby.
        /// </summary>
        public virtual ILkadoxioinspectorreportmodifiedby Lkadoxioinspectorreportmodifiedby { get; private set; }

        /// <summary>
        /// Gets the ILkadoxioinspectorreportmodifiedonbehalfby.
        /// </summary>
        public virtual ILkadoxioinspectorreportmodifiedonbehalfby Lkadoxioinspectorreportmodifiedonbehalfby { get; private set; }

        /// <summary>
        /// Gets the ILkadoxiolqrlicencetransferbpfcreatedby.
        /// </summary>
        public virtual ILkadoxiolqrlicencetransferbpfcreatedby Lkadoxiolqrlicencetransferbpfcreatedby { get; private set; }

        /// <summary>
        /// Gets the ILkadoxiolqrlicencetransferbpfcreatedonbehalfby.
        /// </summary>
        public virtual ILkadoxiolqrlicencetransferbpfcreatedonbehalfby Lkadoxiolqrlicencetransferbpfcreatedonbehalfby { get; private set; }

        /// <summary>
        /// Gets the ILkadoxiolqrlicencetransferbpfmodifiedby.
        /// </summary>
        public virtual ILkadoxiolqrlicencetransferbpfmodifiedby Lkadoxiolqrlicencetransferbpfmodifiedby { get; private set; }

        /// <summary>
        /// Gets the ILkadoxiolqrlicencetransferbpfmodifiedonbehalfby.
        /// </summary>
        public virtual ILkadoxiolqrlicencetransferbpfmodifiedonbehalfby Lkadoxiolqrlicencetransferbpfmodifiedonbehalfby { get; private set; }

        /// <summary>
        /// Gets the ILkadoxiooffsitestoragecreatedby.
        /// </summary>
        public virtual ILkadoxiooffsitestoragecreatedby Lkadoxiooffsitestoragecreatedby { get; private set; }

        /// <summary>
        /// Gets the ILkadoxiooffsitestoragecreatedonbehalfby.
        /// </summary>
        public virtual ILkadoxiooffsitestoragecreatedonbehalfby Lkadoxiooffsitestoragecreatedonbehalfby { get; private set; }

        /// <summary>
        /// Gets the ILkadoxiooffsitestoragemodifiedby.
        /// </summary>
        public virtual ILkadoxiooffsitestoragemodifiedby Lkadoxiooffsitestoragemodifiedby { get; private set; }

        /// <summary>
        /// Gets the ILkadoxiooffsitestoragemodifiedonbehalfby.
        /// </summary>
        public virtual ILkadoxiooffsitestoragemodifiedonbehalfby Lkadoxiooffsitestoragemodifiedonbehalfby { get; private set; }

        /// <summary>
        /// Gets the ILkadoxiopmuareacreatedby.
        /// </summary>
        public virtual ILkadoxiopmuareacreatedby Lkadoxiopmuareacreatedby { get; private set; }

        /// <summary>
        /// Gets the ILkadoxiopmuareacreatedonbehalfby.
        /// </summary>
        public virtual ILkadoxiopmuareacreatedonbehalfby Lkadoxiopmuareacreatedonbehalfby { get; private set; }

        /// <summary>
        /// Gets the ILkadoxiopmuareamodifiedby.
        /// </summary>
        public virtual ILkadoxiopmuareamodifiedby Lkadoxiopmuareamodifiedby { get; private set; }

        /// <summary>
        /// Gets the ILkadoxiopmuareamodifiedonbehalfby.
        /// </summary>
        public virtual ILkadoxiopmuareamodifiedonbehalfby Lkadoxiopmuareamodifiedonbehalfby { get; private set; }

        /// <summary>
        /// Gets the ILkadoxioproratedlicencefeeschedulecreatedby.
        /// </summary>
        public virtual ILkadoxioproratedlicencefeeschedulecreatedby Lkadoxioproratedlicencefeeschedulecreatedby { get; private set; }

        /// <summary>
        /// Gets the ILkadoxioproratedlicencefeeschedulecreatedonbehalfby.
        /// </summary>
        public virtual ILkadoxioproratedlicencefeeschedulecreatedonbehalfby Lkadoxioproratedlicencefeeschedulecreatedonbehalfby { get; private set; }

        /// <summary>
        /// Gets the ILkadoxioproratedlicencefeeschedulemodifiedby.
        /// </summary>
        public virtual ILkadoxioproratedlicencefeeschedulemodifiedby Lkadoxioproratedlicencefeeschedulemodifiedby { get; private set; }

        /// <summary>
        /// Gets the ILkadoxioproratedlicencefeeschedulemodifiedonbehalfby.
        /// </summary>
        public virtual ILkadoxioproratedlicencefeeschedulemodifiedonbehalfby Lkadoxioproratedlicencefeeschedulemodifiedonbehalfby { get; private set; }

        /// <summary>
        /// Gets the IUseradoxiohoursofservice.
        /// </summary>
        public virtual IUseradoxiohoursofservice Useradoxiohoursofservice { get; private set; }

        /// <summary>
        /// Gets the IUseradoxiohoursofservicesdefault.
        /// </summary>
        public virtual IUseradoxiohoursofservicesdefault Useradoxiohoursofservicesdefault { get; private set; }

        /// <summary>
        /// Gets the IUseradoxioinspectorreport.
        /// </summary>
        public virtual IUseradoxioinspectorreport Useradoxioinspectorreport { get; private set; }

        /// <summary>
        /// Gets the IUseradoxiooffsitestorage.
        /// </summary>
        public virtual IUseradoxiooffsitestorage Useradoxiooffsitestorage { get; private set; }

        /// <summary>
        /// Gets the IUseradoxiopmuarea.
        /// </summary>
        public virtual IUseradoxiopmuarea Useradoxiopmuarea { get; private set; }

        /// <summary>
        /// Gets the IUseradoxioproratedlicencefeeschedule.
        /// </summary>
        public virtual IUseradoxioproratedlicencefeeschedule Useradoxioproratedlicencefeeschedule { get; private set; }

        /// <summary>
        /// Gets the ITeamadoxiohoursofservice.
        /// </summary>
        public virtual ITeamadoxiohoursofservice Teamadoxiohoursofservice { get; private set; }

        /// <summary>
        /// Gets the ITeamadoxiohoursofservicesdefault.
        /// </summary>
        public virtual ITeamadoxiohoursofservicesdefault Teamadoxiohoursofservicesdefault { get; private set; }

        /// <summary>
        /// Gets the ITeamadoxioinspectorreport.
        /// </summary>
        public virtual ITeamadoxioinspectorreport Teamadoxioinspectorreport { get; private set; }

        /// <summary>
        /// Gets the ITeamadoxiooffsitestorage.
        /// </summary>
        public virtual ITeamadoxiooffsitestorage Teamadoxiooffsitestorage { get; private set; }

        /// <summary>
        /// Gets the ITeamadoxiopmuarea.
        /// </summary>
        public virtual ITeamadoxiopmuarea Teamadoxiopmuarea { get; private set; }

        /// <summary>
        /// Gets the ITeamadoxioproratedlicencefeeschedule.
        /// </summary>
        public virtual ITeamadoxioproratedlicencefeeschedule Teamadoxioproratedlicencefeeschedule { get; private set; }

        /// <summary>
        /// Gets the IAsyncoperationidadoxiolqrlicencetransferbpf.
        /// </summary>
        public virtual IAsyncoperationidadoxiolqrlicencetransferbpf Asyncoperationidadoxiolqrlicencetransferbpf { get; private set; }

        /// <summary>
        /// Gets the IWorkflows.
        /// </summary>
        public virtual IWorkflows Workflows { get; private set; }

        /// <summary>
        /// Gets the ILkadoxiolqrlicencetransferbpfprocessid.
        /// </summary>
        public virtual ILkadoxiolqrlicencetransferbpfprocessid Lkadoxiolqrlicencetransferbpfprocessid { get; private set; }

        /// <summary>
        /// Initializes a new instance of the DynamicsClient class.
        /// </summary>
        /// <param name='httpClient'>
        /// HttpClient to be used
        /// </param>
        /// <param name='disposeHttpClient'>
        /// True: will dispose the provided httpClient on calling DynamicsClient.Dispose(). False: will not dispose provided httpClient</param>
        protected DynamicsClient(HttpClient httpClient, bool disposeHttpClient) : base(httpClient, disposeHttpClient)
        {
            Initialize();
        }

        /// <summary>
        /// Initializes a new instance of the DynamicsClient class.
        /// </summary>
        /// <param name='handlers'>
        /// Optional. The delegating handlers to add to the http client pipeline.
        /// </param>
        protected DynamicsClient(params DelegatingHandler[] handlers) : base(handlers)
        {
            Initialize();
        }

        /// <summary>
        /// Initializes a new instance of the DynamicsClient class.
        /// </summary>
        /// <param name='rootHandler'>
        /// Optional. The http client handler used to handle http transport.
        /// </param>
        /// <param name='handlers'>
        /// Optional. The delegating handlers to add to the http client pipeline.
        /// </param>
        protected DynamicsClient(HttpClientHandler rootHandler, params DelegatingHandler[] handlers) : base(rootHandler, handlers)
        {
            Initialize();
        }

        /// <summary>
        /// Initializes a new instance of the DynamicsClient class.
        /// </summary>
        /// <param name='baseUri'>
        /// Optional. The base URI of the service.
        /// </param>
        /// <param name='handlers'>
        /// Optional. The delegating handlers to add to the http client pipeline.
        /// </param>
        /// <exception cref="System.ArgumentNullException">
        /// Thrown when a required parameter is null
        /// </exception>
        protected DynamicsClient(System.Uri baseUri, params DelegatingHandler[] handlers) : this(handlers)
        {
            if (baseUri == null)
            {
                throw new System.ArgumentNullException("baseUri");
            }
            BaseUri = baseUri;
        }

        /// <summary>
        /// Initializes a new instance of the DynamicsClient class.
        /// </summary>
        /// <param name='baseUri'>
        /// Optional. The base URI of the service.
        /// </param>
        /// <param name='rootHandler'>
        /// Optional. The http client handler used to handle http transport.
        /// </param>
        /// <param name='handlers'>
        /// Optional. The delegating handlers to add to the http client pipeline.
        /// </param>
        /// <exception cref="System.ArgumentNullException">
        /// Thrown when a required parameter is null
        /// </exception>
        protected DynamicsClient(System.Uri baseUri, HttpClientHandler rootHandler, params DelegatingHandler[] handlers) : this(rootHandler, handlers)
        {
            if (baseUri == null)
            {
                throw new System.ArgumentNullException("baseUri");
            }
            BaseUri = baseUri;
        }

        /// <summary>
        /// Initializes a new instance of the DynamicsClient class.
        /// </summary>
        /// <param name='credentials'>
        /// Required. Subscription credentials which uniquely identify client subscription.
        /// </param>
        /// <param name='handlers'>
        /// Optional. The delegating handlers to add to the http client pipeline.
        /// </param>
        /// <exception cref="System.ArgumentNullException">
        /// Thrown when a required parameter is null
        /// </exception>
        public DynamicsClient(ServiceClientCredentials credentials, params DelegatingHandler[] handlers) : this(handlers)
        {
            if (credentials == null)
            {
                throw new System.ArgumentNullException("credentials");
            }
            Credentials = credentials;
            if (Credentials != null)
            {
                Credentials.InitializeServiceClient(this);
            }
        }

        /// <summary>
        /// Initializes a new instance of the DynamicsClient class.
        /// </summary>
        /// <param name='credentials'>
        /// Required. Subscription credentials which uniquely identify client subscription.
        /// </param>
        /// <param name='httpClient'>
        /// HttpClient to be used
        /// </param>
        /// <param name='disposeHttpClient'>
        /// True: will dispose the provided httpClient on calling DynamicsClient.Dispose(). False: will not dispose provided httpClient</param>
        /// <exception cref="System.ArgumentNullException">
        /// Thrown when a required parameter is null
        /// </exception>
        public DynamicsClient(ServiceClientCredentials credentials, HttpClient httpClient, bool disposeHttpClient) : this(httpClient, disposeHttpClient)
        {
            if (credentials == null)
            {
                throw new System.ArgumentNullException("credentials");
            }
            Credentials = credentials;
            if (Credentials != null)
            {
                Credentials.InitializeServiceClient(this);
            }
        }

        /// <summary>
        /// Initializes a new instance of the DynamicsClient class.
        /// </summary>
        /// <param name='credentials'>
        /// Required. Subscription credentials which uniquely identify client subscription.
        /// </param>
        /// <param name='rootHandler'>
        /// Optional. The http client handler used to handle http transport.
        /// </param>
        /// <param name='handlers'>
        /// Optional. The delegating handlers to add to the http client pipeline.
        /// </param>
        /// <exception cref="System.ArgumentNullException">
        /// Thrown when a required parameter is null
        /// </exception>
        public DynamicsClient(ServiceClientCredentials credentials, HttpClientHandler rootHandler, params DelegatingHandler[] handlers) : this(rootHandler, handlers)
        {
            if (credentials == null)
            {
                throw new System.ArgumentNullException("credentials");
            }
            Credentials = credentials;
            if (Credentials != null)
            {
                Credentials.InitializeServiceClient(this);
            }
        }

        /// <summary>
        /// Initializes a new instance of the DynamicsClient class.
        /// </summary>
        /// <param name='baseUri'>
        /// Optional. The base URI of the service.
        /// </param>
        /// <param name='credentials'>
        /// Required. Subscription credentials which uniquely identify client subscription.
        /// </param>
        /// <param name='handlers'>
        /// Optional. The delegating handlers to add to the http client pipeline.
        /// </param>
        /// <exception cref="System.ArgumentNullException">
        /// Thrown when a required parameter is null
        /// </exception>
        public DynamicsClient(System.Uri baseUri, ServiceClientCredentials credentials, params DelegatingHandler[] handlers) : this(handlers)
        {
            if (baseUri == null)
            {
                throw new System.ArgumentNullException("baseUri");
            }
            if (credentials == null)
            {
                throw new System.ArgumentNullException("credentials");
            }
            BaseUri = baseUri;
            Credentials = credentials;
            if (Credentials != null)
            {
                Credentials.InitializeServiceClient(this);
            }
        }

        /// <summary>
        /// Initializes a new instance of the DynamicsClient class.
        /// </summary>
        /// <param name='baseUri'>
        /// Optional. The base URI of the service.
        /// </param>
        /// <param name='credentials'>
        /// Required. Subscription credentials which uniquely identify client subscription.
        /// </param>
        /// <param name='rootHandler'>
        /// Optional. The http client handler used to handle http transport.
        /// </param>
        /// <param name='handlers'>
        /// Optional. The delegating handlers to add to the http client pipeline.
        /// </param>
        /// <exception cref="System.ArgumentNullException">
        /// Thrown when a required parameter is null
        /// </exception>
        public DynamicsClient(System.Uri baseUri, ServiceClientCredentials credentials, HttpClientHandler rootHandler, params DelegatingHandler[] handlers) : this(rootHandler, handlers)
        {
            if (baseUri == null)
            {
                throw new System.ArgumentNullException("baseUri");
            }
            if (credentials == null)
            {
                throw new System.ArgumentNullException("credentials");
            }
            BaseUri = baseUri;
            Credentials = credentials;
            if (Credentials != null)
            {
                Credentials.InitializeServiceClient(this);
            }
        }

        /// <summary>
        /// An optional partial-method to perform custom initialization.
        ///</summary>
        partial void CustomInitialize();
        /// <summary>
        /// Initializes client properties.
        /// </summary>
        private void Initialize()
        {
            Accounts = new Accounts(this);
            Partyidadoxiolocalgovindigenousnation = new Partyidadoxiolocalgovindigenousnation(this);
            Adoxiolicencetypeadoxioinvestigationset = new Adoxiolicencetypeadoxioinvestigationset(this);
            Aliases = new Aliases(this);
            Annualvolumes = new Annualvolumes(this);
            Applicationbpfv3s = new Applicationbpfv3s(this);
            Applicationcrsbpfv4s = new Applicationcrsbpfv4s(this);
            Applicationinvoicehistories = new Applicationinvoicehistories(this);
            Applicationlicenseechangesv10s = new Applicationlicenseechangesv10s(this);
            Applicationliquorbpfs = new Applicationliquorbpfs(this);
            Applicationliquorbpfv2s = new Applicationliquorbpfv2s(this);
            Applicationrelocationv1s = new Applicationrelocationv1s(this);
            Applications = new Applications(this);
            Applicationadoxiohoursofserviceapplication = new Applicationadoxiohoursofserviceapplication(this);
            Pmuarea = new Pmuarea(this);
            Bpfadoxioapplicationadoxiolqrlicencetransferbpf = new Bpfadoxioapplicationadoxiolqrlicencetransferbpf(this);
            Applicationstructurechangev1s = new Applicationstructurechangev1s(this);
            Applicationtermsconditionslimitations = new Applicationtermsconditionslimitations(this);
            Endorsement = new Endorsement(this);
            Applicationtransferownershipv1s = new Applicationtransferownershipv1s(this);
            Applicationtypecontents = new Applicationtypecontents(this);
            Applicationtypefeeschedules = new Applicationtypefeeschedules(this);
            Applicationtypes = new Applicationtypes(this);
            Applicationtypeadoxiohoursofserviceapplicationtype = new Applicationtypeadoxiohoursofserviceapplicationtype(this);
            Applicationtypeadoxiohoursofservicesdefaultapplicationtype = new Applicationtypeadoxiohoursofservicesdefaultapplicationtype(this);
            Applicationtypeadoxioproratedlicencefeescheduleapplicationtype = new Applicationtypeadoxioproratedlicencefeescheduleapplicationtype(this);
            Applicationtypeadoxiotermsconditionslimitationspresetapplicationtype = new Applicationtypeadoxiotermsconditionslimitationspresetapplicationtype(this);
            Fylicencefeeproduct = new Fylicencefeeproduct(this);
            Areas = new Areas(this);
            Areaadoxioinspectorreportarea = new Areaadoxioinspectorreportarea(this);
            Pmuareaid = new Pmuareaid(this);
            Auditlogrequests = new Auditlogrequests(this);
            Businessaccounts = new Businessaccounts(this);
            Cannabisinventoryreports = new Cannabisinventoryreports(this);
            Cannabismonthlyreports = new Cannabismonthlyreports(this);
            Cannabisproductadmins = new Cannabisproductadmins(this);
            Citydistricts = new Citydistricts(this);
            Complaints = new Complaints(this);
            Complianceinvestigations = new Complianceinvestigations(this);
            Compliancemeetings = new Compliancemeetings(this);
            Contraventionadmins = new Contraventionadmins(this);
            Contraventions = new Contraventions(this);
            Corporatehistorysummaries = new Corporatehistorysummaries(this);
            Corporateroles = new Corporateroles(this);
            Customautonumberdefinitions = new Customautonumberdefinitions(this);
            Customautonumberrequests = new Customautonumberrequests(this);
            Documentadmins = new Documentadmins(this);
            Documents = new Documents(this);
            Endorsements = new Endorsements(this);
            Endorsementadoxioapplicationtermsconditionslimitationendorsement = new Endorsementadoxioapplicationtermsconditionslimitationendorsement(this);
            Endorsementadoxiohoursofserviceendorsement = new Endorsementadoxiohoursofserviceendorsement(this);
            Endorsementadoxioserviceareaendorsement = new Endorsementadoxioserviceareaendorsement(this);
            Enforcementactionbpfs = new Enforcementactionbpfs(this);
            Enforcementactions = new Enforcementactions(this);
            Establishmentincidents = new Establishmentincidents(this);
            Establishments = new Establishments(this);
            Establishmentadoxiohoursofserviceestablishment = new Establishmentadoxiohoursofserviceestablishment(this);
            Establishmentwatchwords = new Establishmentwatchwords(this);
            Events = new Events(this);
            Eventschedules = new Eventschedules(this);
            Exhibits = new Exhibits(this);
            Federalreportexports = new Federalreportexports(this);
            Fiainvestigationlogs = new Fiainvestigationlogs(this);
            Formelementuploadfields = new Formelementuploadfields(this);
            Fundingsources = new Fundingsources(this);
            Hoursofservices = new Hoursofservices(this);
            Application = new Application(this);
            Applicationtype = new Applicationtype(this);
            Establishment = new Establishment(this);
            Hoursofserviceasyncoperations = new Hoursofserviceasyncoperations(this);
            Hoursofservicebulkdeletefailures = new Hoursofservicebulkdeletefailures(this);
            Hoursofserviceduplicatebaserecord = new Hoursofserviceduplicatebaserecord(this);
            Hoursofserviceduplicatematchingrecord = new Hoursofserviceduplicatematchingrecord(this);
            Hoursofservicemailboxtrackingfolders = new Hoursofservicemailboxtrackingfolders(this);
            Hoursofserviceprincipalobjectattributeaccesses = new Hoursofserviceprincipalobjectattributeaccesses(this);
            Hoursofserviceprocesssession = new Hoursofserviceprocesssession(this);
            Hoursofservicesyncerrors = new Hoursofservicesyncerrors(this);
            Inspectionid = new Inspectionid(this);
            Licence = new Licence(this);
            Hoursofservicesdefaults = new Hoursofservicesdefaults(this);
            Hoursofservicesdefaultasyncoperations = new Hoursofservicesdefaultasyncoperations(this);
            Hoursofservicesdefaultbulkdeletefailures = new Hoursofservicesdefaultbulkdeletefailures(this);
            Hoursofservicesdefaultmailboxtrackingfolders = new Hoursofservicesdefaultmailboxtrackingfolders(this);
            Hoursofservicesdefaultprincipalobjectattributeaccesses = new Hoursofservicesdefaultprincipalobjectattributeaccesses(this);
            Hoursofservicesdefaultprocesssession = new Hoursofservicesdefaultprocesssession(this);
            Hoursofservicesdefaultsyncerrors = new Hoursofservicesdefaultsyncerrors(this);
            Incidentadoxiolicencetypeset = new Incidentadoxiolicencetypeset(this);
            Inspectioninspectorsset = new Inspectioninspectorsset(this);
            Inspectionreactivationhistories = new Inspectionreactivationhistories(this);
            Inspectorcommentsrollups = new Inspectorcommentsrollups(this);
            Inspectorreports = new Inspectorreports(this);
            Area = new Area(this);
            Inspector = new Inspector(this);
            Inspectorreportasyncoperations = new Inspectorreportasyncoperations(this);
            Inspectorreportbulkdeletefailures = new Inspectorreportbulkdeletefailures(this);
            Inspectorreportduplicatebaserecord = new Inspectorreportduplicatebaserecord(this);
            Inspectorreportduplicatematchingrecord = new Inspectorreportduplicatematchingrecord(this);
            Inspectorreportmailboxtrackingfolders = new Inspectorreportmailboxtrackingfolders(this);
            Inspectorreportprincipalobjectattributeaccesses = new Inspectorreportprincipalobjectattributeaccesses(this);
            Inspectorreportprocesssession = new Inspectorreportprocesssession(this);
            Inspectorreportsyncerrors = new Inspectorreportsyncerrors(this);
            Region = new Region(this);
            Interests = new Interests(this);
            Investigationactivities = new Investigationactivities(this);
            Investigationreactivationhistories = new Investigationreactivationhistories(this);
            Investigations = new Investigations(this);
            Ldborders = new Ldborders(this);
            Legalentities = new Legalentities(this);
            Licenceldbordertotalhistories = new Licenceldbordertotalhistories(this);
            Licenceses = new Licenceses(this);
            Licencesadoxiohoursofservicelicence = new Licencesadoxiohoursofservicelicence(this);
            Licencesoffsitestoragelocations = new Licencesoffsitestoragelocations(this);
            Licencesubcategories = new Licencesubcategories(this);
            Licencefeeproduct = new Licencefeeproduct(this);
            Licencesubcategoryadoxioproratedlicencefeeschedulelicencesubcategory = new Licencesubcategoryadoxioproratedlicencefeeschedulelicencesubcategory(this);
            Licencetypes = new Licencetypes(this);
            Licencetypesapplicationtypesset = new Licencetypesapplicationtypesset(this);
            Licenseechangelogs = new Licenseechangelogs(this);
            Loans = new Loans(this);
            Localgovindigenousnations = new Localgovindigenousnations(this);
            Localgovindigenousnationactivityparties = new Localgovindigenousnationactivityparties(this);
            Lqrlicencetransferbpfs = new Lqrlicencetransferbpfs(this);
            Lqrlicencetransferbpfasyncoperations = new Lqrlicencetransferbpfasyncoperations(this);
            Lqrlicencetransferbpfbulkdeletefailures = new Lqrlicencetransferbpfbulkdeletefailures(this);
            Lqrlicencetransferbpfmailboxtrackingfolders = new Lqrlicencetransferbpfmailboxtrackingfolders(this);
            Lqrlicencetransferbpfprincipalobjectattributeaccesses = new Lqrlicencetransferbpfprincipalobjectattributeaccesses(this);
            Lqrlicencetransferbpfprocesssession = new Lqrlicencetransferbpfprocesssession(this);
            Lqrlicencetransferbpfsyncerrors = new Lqrlicencetransferbpfsyncerrors(this);
            Lqrlicencetransferbpfworkflowlogs = new Lqrlicencetransferbpfworkflowlogs(this);
            Bpfadoxioapplicationid = new Bpfadoxioapplicationid(this);
            Offsitestorages = new Offsitestorages(this);
            Licenceid = new Licenceid(this);
            Offsitestorageasyncoperations = new Offsitestorageasyncoperations(this);
            Offsitestoragebulkdeletefailures = new Offsitestoragebulkdeletefailures(this);
            Offsitestorageduplicatebaserecord = new Offsitestorageduplicatebaserecord(this);
            Offsitestorageduplicatematchingrecord = new Offsitestorageduplicatematchingrecord(this);
            Offsitestoragemailboxtrackingfolders = new Offsitestoragemailboxtrackingfolders(this);
            Offsitestorageprincipalobjectattributeaccesses = new Offsitestorageprincipalobjectattributeaccesses(this);
            Offsitestorageprocesssession = new Offsitestorageprocesssession(this);
            Offsitestoragesyncerrors = new Offsitestoragesyncerrors(this);
            Personalhistorysummaries = new Personalhistorysummaries(this);
            Pmuareas = new Pmuareas(this);
            Manufacturinginspectorid = new Manufacturinginspectorid(this);
            Pmuareaadoxioapplicationpmuarea = new Pmuareaadoxioapplicationpmuarea(this);
            Pmuareaareas = new Pmuareaareas(this);
            Pmuareaasyncoperations = new Pmuareaasyncoperations(this);
            Pmuareabulkdeletefailures = new Pmuareabulkdeletefailures(this);
            Pmuareaduplicatebaserecord = new Pmuareaduplicatebaserecord(this);
            Pmuareaduplicatematchingrecord = new Pmuareaduplicatematchingrecord(this);
            Pmuareainspections = new Pmuareainspections(this);
            Pmuarealicences = new Pmuarealicences(this);
            Pmuareamailboxtrackingfolders = new Pmuareamailboxtrackingfolders(this);
            Pmuareamarketevents = new Pmuareamarketevents(this);
            Pmuareaprincipalobjectattributeaccesses = new Pmuareaprincipalobjectattributeaccesses(this);
            Pmuareaprocesssession = new Pmuareaprocesssession(this);
            Pmuareasyncerrors = new Pmuareasyncerrors(this);
            Regionalmanagerid = new Regionalmanagerid(this);
            Policejurisdictions = new Policejurisdictions(this);
            Policydocuments = new Policydocuments(this);
            Postalcodes = new Postalcodes(this);
            Previousaddresses = new Previousaddresses(this);
            Proratedlicencefeeschedules = new Proratedlicencefeeschedules(this);
            Licencesubcategory = new Licencesubcategory(this);
            Proratedlicencefeescheduleasyncoperations = new Proratedlicencefeescheduleasyncoperations(this);
            Proratedlicencefeeschedulebulkdeletefailures = new Proratedlicencefeeschedulebulkdeletefailures(this);
            Proratedlicencefeeschedulemailboxtrackingfolders = new Proratedlicencefeeschedulemailboxtrackingfolders(this);
            Proratedlicencefeescheduleprincipalobjectattributeaccesses = new Proratedlicencefeescheduleprincipalobjectattributeaccesses(this);
            Proratedlicencefeescheduleprocesssession = new Proratedlicencefeescheduleprocesssession(this);
            Proratedlicencefeeschedulesyncerrors = new Proratedlicencefeeschedulesyncerrors(this);
            Regions = new Regions(this);
            Regionadoxioinspectorreportregion = new Regionadoxioinspectorreportregion(this);
            Relatedparties = new Relatedparties(this);
            Rmreviews = new Rmreviews(this);
            Serviceareas = new Serviceareas(this);
            Settings = new Settings(this);
            Spddatarows = new Spddatarows(this);
            Spdexportses = new Spdexportses(this);
            Taxandaccountings = new Taxandaccountings(this);
            Termsconditionslimitationspresets = new Termsconditionslimitationspresets(this);
            Territories = new Territories(this);
            Tiedhouseassociations = new Tiedhouseassociations(this);
            Tiedhouseconnections = new Tiedhouseconnections(this);
            Witnesses = new Witnesses(this);
            Workerinvoicehistories = new Workerinvoicehistories(this);
            Workers = new Workers(this);
            Regardingobjectidadoxiohoursofservice = new Regardingobjectidadoxiohoursofservice(this);
            Regardingobjectidadoxiohoursofservicesdefault = new Regardingobjectidadoxiohoursofservicesdefault(this);
            Regardingobjectidadoxioinspectorreport = new Regardingobjectidadoxioinspectorreport(this);
            Regardingobjectidadoxiolqrlicencetransferbpf = new Regardingobjectidadoxiolqrlicencetransferbpf(this);
            Regardingobjectidadoxiooffsitestorage = new Regardingobjectidadoxiooffsitestorage(this);
            Regardingobjectidadoxiopmuarea = new Regardingobjectidadoxiopmuarea(this);
            Regardingobjectidadoxioproratedlicencefeeschedule = new Regardingobjectidadoxioproratedlicencefeeschedule(this);
            Businessunitadoxiohoursofservice = new Businessunitadoxiohoursofservice(this);
            Businessunitadoxiohoursofservicesdefault = new Businessunitadoxiohoursofservicesdefault(this);
            Businessunitadoxioinspectorreport = new Businessunitadoxioinspectorreport(this);
            Businessunitadoxiooffsitestorage = new Businessunitadoxiooffsitestorage(this);
            Businessunitadoxiopmuarea = new Businessunitadoxiopmuarea(this);
            Businessunitadoxioproratedlicencefeeschedule = new Businessunitadoxioproratedlicencefeeschedule(this);
            Contacts = new Contacts(this);
            Baserecordidadoxiohoursofservice = new Baserecordidadoxiohoursofservice(this);
            Baserecordidadoxioinspectorreport = new Baserecordidadoxioinspectorreport(this);
            Baserecordidadoxiooffsitestorage = new Baserecordidadoxiooffsitestorage(this);
            Baserecordidadoxiopmuarea = new Baserecordidadoxiopmuarea(this);
            Duplicaterecordidadoxiohoursofservice = new Duplicaterecordidadoxiohoursofservice(this);
            Duplicaterecordidadoxioinspectorreport = new Duplicaterecordidadoxioinspectorreport(this);
            Duplicaterecordidadoxiooffsitestorage = new Duplicaterecordidadoxiooffsitestorage(this);
            Duplicaterecordidadoxiopmuarea = new Duplicaterecordidadoxiopmuarea(this);
            Entitydefinitions = new Entitydefinitions(this);
            Globaloptionsetdefinitions = new Globaloptionsetdefinitions(this);
            Inspectionhoursofservice = new Inspectionhoursofservice(this);
            Invoices = new Invoices(this);
            Leads = new Leads(this);
            Lists = new Lists(this);
            Organizationadoxiolqrlicencetransferbpf = new Organizationadoxiolqrlicencetransferbpf(this);
            Objectidadoxiohoursofservice = new Objectidadoxiohoursofservice(this);
            Objectidadoxiohoursofservicesdefault = new Objectidadoxiohoursofservicesdefault(this);
            Objectidadoxioinspectorreport = new Objectidadoxioinspectorreport(this);
            Objectidadoxiolqrlicencetransferbpf = new Objectidadoxiolqrlicencetransferbpf(this);
            Objectidadoxiooffsitestorage = new Objectidadoxiooffsitestorage(this);
            Objectidadoxiopmuarea = new Objectidadoxiopmuarea(this);
            Objectidadoxioproratedlicencefeeschedule = new Objectidadoxioproratedlicencefeeschedule(this);
            Lkadoxiolqrlicencetransferbpfactivestageid = new Lkadoxiolqrlicencetransferbpfactivestageid(this);
            Productadoxioapplicationtypefylicencefeeproduct = new Productadoxioapplicationtypefylicencefeeproduct(this);
            Productadoxiolicencesubcategorylicencefeeproduct = new Productadoxiolicencesubcategorylicencefeeproduct(this);
            Savedqueries = new Savedqueries(this);
            Sharepointdocumentlocations = new Sharepointdocumentlocations(this);
            Sharepointsites = new Sharepointsites(this);
            Systemforms = new Systemforms(this);
            Systemusers = new Systemusers(this);
            Mfginspectorpmuareas = new Mfginspectorpmuareas(this);
            Regionalmanagerpmuareas = new Regionalmanagerpmuareas(this);
            Systemuseradoxioinspectorreportinspector = new Systemuseradoxioinspectorreportinspector(this);
            Lkadoxiohoursofservicecreatedby = new Lkadoxiohoursofservicecreatedby(this);
            Lkadoxiohoursofservicecreatedonbehalfby = new Lkadoxiohoursofservicecreatedonbehalfby(this);
            Lkadoxiohoursofservicemodifiedby = new Lkadoxiohoursofservicemodifiedby(this);
            Lkadoxiohoursofservicemodifiedonbehalfby = new Lkadoxiohoursofservicemodifiedonbehalfby(this);
            Lkadoxiohoursofservicesdefaultcreatedby = new Lkadoxiohoursofservicesdefaultcreatedby(this);
            Lkadoxiohoursofservicesdefaultcreatedonbehalfby = new Lkadoxiohoursofservicesdefaultcreatedonbehalfby(this);
            Lkadoxiohoursofservicesdefaultmodifiedby = new Lkadoxiohoursofservicesdefaultmodifiedby(this);
            Lkadoxiohoursofservicesdefaultmodifiedonbehalfby = new Lkadoxiohoursofservicesdefaultmodifiedonbehalfby(this);
            Lkadoxioinspectorreportcreatedby = new Lkadoxioinspectorreportcreatedby(this);
            Lkadoxioinspectorreportcreatedonbehalfby = new Lkadoxioinspectorreportcreatedonbehalfby(this);
            Lkadoxioinspectorreportmodifiedby = new Lkadoxioinspectorreportmodifiedby(this);
            Lkadoxioinspectorreportmodifiedonbehalfby = new Lkadoxioinspectorreportmodifiedonbehalfby(this);
            Lkadoxiolqrlicencetransferbpfcreatedby = new Lkadoxiolqrlicencetransferbpfcreatedby(this);
            Lkadoxiolqrlicencetransferbpfcreatedonbehalfby = new Lkadoxiolqrlicencetransferbpfcreatedonbehalfby(this);
            Lkadoxiolqrlicencetransferbpfmodifiedby = new Lkadoxiolqrlicencetransferbpfmodifiedby(this);
            Lkadoxiolqrlicencetransferbpfmodifiedonbehalfby = new Lkadoxiolqrlicencetransferbpfmodifiedonbehalfby(this);
            Lkadoxiooffsitestoragecreatedby = new Lkadoxiooffsitestoragecreatedby(this);
            Lkadoxiooffsitestoragecreatedonbehalfby = new Lkadoxiooffsitestoragecreatedonbehalfby(this);
            Lkadoxiooffsitestoragemodifiedby = new Lkadoxiooffsitestoragemodifiedby(this);
            Lkadoxiooffsitestoragemodifiedonbehalfby = new Lkadoxiooffsitestoragemodifiedonbehalfby(this);
            Lkadoxiopmuareacreatedby = new Lkadoxiopmuareacreatedby(this);
            Lkadoxiopmuareacreatedonbehalfby = new Lkadoxiopmuareacreatedonbehalfby(this);
            Lkadoxiopmuareamodifiedby = new Lkadoxiopmuareamodifiedby(this);
            Lkadoxiopmuareamodifiedonbehalfby = new Lkadoxiopmuareamodifiedonbehalfby(this);
            Lkadoxioproratedlicencefeeschedulecreatedby = new Lkadoxioproratedlicencefeeschedulecreatedby(this);
            Lkadoxioproratedlicencefeeschedulecreatedonbehalfby = new Lkadoxioproratedlicencefeeschedulecreatedonbehalfby(this);
            Lkadoxioproratedlicencefeeschedulemodifiedby = new Lkadoxioproratedlicencefeeschedulemodifiedby(this);
            Lkadoxioproratedlicencefeeschedulemodifiedonbehalfby = new Lkadoxioproratedlicencefeeschedulemodifiedonbehalfby(this);
            Useradoxiohoursofservice = new Useradoxiohoursofservice(this);
            Useradoxiohoursofservicesdefault = new Useradoxiohoursofservicesdefault(this);
            Useradoxioinspectorreport = new Useradoxioinspectorreport(this);
            Useradoxiooffsitestorage = new Useradoxiooffsitestorage(this);
            Useradoxiopmuarea = new Useradoxiopmuarea(this);
            Useradoxioproratedlicencefeeschedule = new Useradoxioproratedlicencefeeschedule(this);
            Teamadoxiohoursofservice = new Teamadoxiohoursofservice(this);
            Teamadoxiohoursofservicesdefault = new Teamadoxiohoursofservicesdefault(this);
            Teamadoxioinspectorreport = new Teamadoxioinspectorreport(this);
            Teamadoxiooffsitestorage = new Teamadoxiooffsitestorage(this);
            Teamadoxiopmuarea = new Teamadoxiopmuarea(this);
            Teamadoxioproratedlicencefeeschedule = new Teamadoxioproratedlicencefeeschedule(this);
            Asyncoperationidadoxiolqrlicencetransferbpf = new Asyncoperationidadoxiolqrlicencetransferbpf(this);
            Workflows = new Workflows(this);
            Lkadoxiolqrlicencetransferbpfprocessid = new Lkadoxiolqrlicencetransferbpfprocessid(this);
            BaseUri = new System.Uri("http://localhost");
            SerializationSettings = new JsonSerializerSettings
            {
                Formatting = Newtonsoft.Json.Formatting.Indented,
                DateFormatHandling = Newtonsoft.Json.DateFormatHandling.IsoDateFormat,
                DateTimeZoneHandling = Newtonsoft.Json.DateTimeZoneHandling.Utc,
                NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore,
                ReferenceLoopHandling = Newtonsoft.Json.ReferenceLoopHandling.Serialize,
                ContractResolver = new ReadOnlyJsonContractResolver(),
                Converters = new  List<JsonConverter>
                    {
                        new Iso8601TimeSpanConverter()
                    }
            };
            DeserializationSettings = new JsonSerializerSettings
            {
                DateFormatHandling = Newtonsoft.Json.DateFormatHandling.IsoDateFormat,
                DateTimeZoneHandling = Newtonsoft.Json.DateTimeZoneHandling.Utc,
                NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore,
                ReferenceLoopHandling = Newtonsoft.Json.ReferenceLoopHandling.Serialize,
                ContractResolver = new ReadOnlyJsonContractResolver(),
                Converters = new List<JsonConverter>
                    {
                        new Iso8601TimeSpanConverter()
                    }
            };
            CustomInitialize();
        }
    }
}
