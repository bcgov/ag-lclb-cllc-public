// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Gov.Lclb.Cllb.Interfaces
{
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for Adoxiolegalentitiesadoxio.
    /// </summary>
    public static partial class AdoxiolegalentitiesadoxioExtensions
    {
            /// <summary>
            /// Delete entity from adoxio_legalentities
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='adoxioLegalentityid'>
            /// key: adoxio_legalentityid
            /// </param>
            /// <param name='ifMatch'>
            /// ETag
            /// </param>
            public static void Deleteentityfromadoxiolegalentities(this IAdoxiolegalentitiesadoxio operations, string adoxioLegalentityid, string ifMatch = default(string))
            {
                operations.DeleteentityfromadoxiolegalentitiesAsync(adoxioLegalentityid, ifMatch).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Delete entity from adoxio_legalentities
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='adoxioLegalentityid'>
            /// key: adoxio_legalentityid
            /// </param>
            /// <param name='ifMatch'>
            /// ETag
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task DeleteentityfromadoxiolegalentitiesAsync(this IAdoxiolegalentitiesadoxio operations, string adoxioLegalentityid, string ifMatch = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.DeleteentityfromadoxiolegalentitiesWithHttpMessagesAsync(adoxioLegalentityid, ifMatch, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

    }
}
