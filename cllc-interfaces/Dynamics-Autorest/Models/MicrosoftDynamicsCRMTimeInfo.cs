// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Gov.Lclb.Cllb.Interfaces.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// TimeInfo
    /// </summary>
    public partial class MicrosoftDynamicsCRMTimeInfo
    {
        /// <summary>
        /// Initializes a new instance of the MicrosoftDynamicsCRMTimeInfo
        /// class.
        /// </summary>
        public MicrosoftDynamicsCRMTimeInfo()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the MicrosoftDynamicsCRMTimeInfo
        /// class.
        /// </summary>
        /// <param name="subCode">Possible values include: 'Unspecified',
        /// 'Schedulable', 'Committed', 'Uncommitted', 'Break', 'Holiday',
        /// 'Vacation', 'Appointment', 'ResourceStartTime',
        /// 'ResourceServiceRestriction', 'ResourceCapacity',
        /// 'ServiceRestriction', 'ServiceCost'</param>
        /// <param name="timeCode">Possible values include: 'Available',
        /// 'Busy', 'Unavailable', 'Filter'</param>
        public MicrosoftDynamicsCRMTimeInfo(int? activityStatusCode = default(int?), string calendarId = default(string), string displayText = default(string), double? effort = default(double?), System.DateTimeOffset? end = default(System.DateTimeOffset?), bool? isActivity = default(bool?), string sourceId = default(string), int? sourceTypeCode = default(int?), System.DateTimeOffset? start = default(System.DateTimeOffset?), string subCode = default(string), string timeCode = default(string))
        {
            ActivityStatusCode = activityStatusCode;
            CalendarId = calendarId;
            DisplayText = displayText;
            Effort = effort;
            End = end;
            IsActivity = isActivity;
            SourceId = sourceId;
            SourceTypeCode = sourceTypeCode;
            Start = start;
            SubCode = subCode;
            TimeCode = timeCode;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ActivityStatusCode")]
        public int? ActivityStatusCode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CalendarId")]
        public string CalendarId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "DisplayText")]
        public string DisplayText { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Effort")]
        public double? Effort { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "End")]
        public System.DateTimeOffset? End { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsActivity")]
        public bool? IsActivity { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SourceId")]
        public string SourceId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SourceTypeCode")]
        public int? SourceTypeCode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Start")]
        public System.DateTimeOffset? Start { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'Unspecified', 'Schedulable',
        /// 'Committed', 'Uncommitted', 'Break', 'Holiday', 'Vacation',
        /// 'Appointment', 'ResourceStartTime', 'ResourceServiceRestriction',
        /// 'ResourceCapacity', 'ServiceRestriction', 'ServiceCost'
        /// </summary>
        [JsonProperty(PropertyName = "SubCode")]
        public string SubCode { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'Available', 'Busy',
        /// 'Unavailable', 'Filter'
        /// </summary>
        [JsonProperty(PropertyName = "TimeCode")]
        public string TimeCode { get; set; }

    }
}
