// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Gov.Lclb.Cllb.Interfaces.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class MicrosoftDynamicsCRMRelationshipMetadataBase : MicrosoftDynamicsCRMMetadataBase
    {
        /// <summary>
        /// Initializes a new instance of the
        /// MicrosoftDynamicsCRMRelationshipMetadataBase class.
        /// </summary>
        public MicrosoftDynamicsCRMRelationshipMetadataBase()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// MicrosoftDynamicsCRMRelationshipMetadataBase class.
        /// </summary>
        /// <param name="relationshipType">Possible values include:
        /// 'OneToManyRelationship', 'ManyToManyRelationship'</param>
        /// <param name="securityTypes">Possible values include: 'None',
        /// 'Append', 'ParentChild', 'Pointer', 'Inheritance'</param>
        public MicrosoftDynamicsCRMRelationshipMetadataBase(bool? hasChanged = default(bool?), string metadataId = default(string), string introducedVersion = default(string), bool? isCustomRelationship = default(bool?), MicrosoftDynamicsCRMBooleanManagedProperty isCustomizable = default(MicrosoftDynamicsCRMBooleanManagedProperty), bool? isManaged = default(bool?), bool? isValidForAdvancedFind = default(bool?), string relationshipType = default(string), string schemaName = default(string), string securityTypes = default(string))
            : base(hasChanged, metadataId)
        {
            IntroducedVersion = introducedVersion;
            IsCustomRelationship = isCustomRelationship;
            IsCustomizable = isCustomizable;
            IsManaged = isManaged;
            IsValidForAdvancedFind = isValidForAdvancedFind;
            RelationshipType = relationshipType;
            SchemaName = schemaName;
            SecurityTypes = securityTypes;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IntroducedVersion")]
        public string IntroducedVersion { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsCustomRelationship")]
        public bool? IsCustomRelationship { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsCustomizable")]
        public MicrosoftDynamicsCRMBooleanManagedProperty IsCustomizable { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsManaged")]
        public bool? IsManaged { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsValidForAdvancedFind")]
        public bool? IsValidForAdvancedFind { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'OneToManyRelationship',
        /// 'ManyToManyRelationship'
        /// </summary>
        [JsonProperty(PropertyName = "RelationshipType")]
        public string RelationshipType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SchemaName")]
        public string SchemaName { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'None', 'Append',
        /// 'ParentChild', 'Pointer', 'Inheritance'
        /// </summary>
        [JsonProperty(PropertyName = "SecurityTypes")]
        public string SecurityTypes { get; set; }

    }
}
