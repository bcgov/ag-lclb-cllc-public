// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Gov.Lclb.Cllb.Interfaces.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class MicrosoftDynamicsCRMtheme
    {
        /// <summary>
        /// Initializes a new instance of the MicrosoftDynamicsCRMtheme class.
        /// </summary>
        public MicrosoftDynamicsCRMtheme()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the MicrosoftDynamicsCRMtheme class.
        /// </summary>
        public MicrosoftDynamicsCRMtheme(string _createdbyValue = default(string), string _createdonbehalfbyValue = default(string), string _logoidValue = default(string), string _modifiedbyValue = default(string), string _modifiedonbehalfbyValue = default(string), string _organizationidValue = default(string), string _transactioncurrencyidValue = default(string), string backgroundcolor = default(string), string controlborder = default(string), string controlshade = default(string), MicrosoftDynamicsCRMsystemuser createdby = default(MicrosoftDynamicsCRMsystemuser), System.DateTimeOffset? createdon = default(System.DateTimeOffset?), MicrosoftDynamicsCRMsystemuser createdonbehalfby = default(MicrosoftDynamicsCRMsystemuser), string defaultcustomentitycolor = default(string), string defaultentitycolor = default(string), double? exchangerate = default(double?), string globallinkcolor = default(string), string headercolor = default(string), string hoverlinkeffect = default(string), int? importsequencenumber = default(int?), bool? isdefaulttheme = default(bool?), MicrosoftDynamicsCRMwebresource logoimage = default(MicrosoftDynamicsCRMwebresource), string logotooltip = default(string), MicrosoftDynamicsCRMsystemuser modifiedby = default(MicrosoftDynamicsCRMsystemuser), System.DateTimeOffset? modifiedon = default(System.DateTimeOffset?), MicrosoftDynamicsCRMsystemuser modifiedonbehalfby = default(MicrosoftDynamicsCRMsystemuser), string name = default(string), string navbarbackgroundcolor = default(string), string navbarshelfcolor = default(string), MicrosoftDynamicsCRMorganization organizationid = default(MicrosoftDynamicsCRMorganization), System.DateTimeOffset? overriddencreatedon = default(System.DateTimeOffset?), string processcontrolcolor = default(string), string selectedlinkeffect = default(string), int? statecode = default(int?), int? statuscode = default(int?), IList<MicrosoftDynamicsCRMasyncoperation> themeAsyncOperations = default(IList<MicrosoftDynamicsCRMasyncoperation>), IList<MicrosoftDynamicsCRMbulkdeletefailure> themeBulkDeleteFailures = default(IList<MicrosoftDynamicsCRMbulkdeletefailure>), string themeid = default(string), int? timezoneruleversionnumber = default(int?), MicrosoftDynamicsCRMtransactioncurrency transactioncurrencyid = default(MicrosoftDynamicsCRMtransactioncurrency), bool? type = default(bool?), int? utcconversiontimezonecode = default(int?), object versionnumber = default(object))
        {
            this._createdbyValue = _createdbyValue;
            this._createdonbehalfbyValue = _createdonbehalfbyValue;
            this._logoidValue = _logoidValue;
            this._modifiedbyValue = _modifiedbyValue;
            this._modifiedonbehalfbyValue = _modifiedonbehalfbyValue;
            this._organizationidValue = _organizationidValue;
            this._transactioncurrencyidValue = _transactioncurrencyidValue;
            Backgroundcolor = backgroundcolor;
            Controlborder = controlborder;
            Controlshade = controlshade;
            Createdby = createdby;
            Createdon = createdon;
            Createdonbehalfby = createdonbehalfby;
            Defaultcustomentitycolor = defaultcustomentitycolor;
            Defaultentitycolor = defaultentitycolor;
            Exchangerate = exchangerate;
            Globallinkcolor = globallinkcolor;
            Headercolor = headercolor;
            Hoverlinkeffect = hoverlinkeffect;
            Importsequencenumber = importsequencenumber;
            Isdefaulttheme = isdefaulttheme;
            Logoimage = logoimage;
            Logotooltip = logotooltip;
            Modifiedby = modifiedby;
            Modifiedon = modifiedon;
            Modifiedonbehalfby = modifiedonbehalfby;
            Name = name;
            Navbarbackgroundcolor = navbarbackgroundcolor;
            Navbarshelfcolor = navbarshelfcolor;
            Organizationid = organizationid;
            Overriddencreatedon = overriddencreatedon;
            Processcontrolcolor = processcontrolcolor;
            Selectedlinkeffect = selectedlinkeffect;
            Statecode = statecode;
            Statuscode = statuscode;
            ThemeAsyncOperations = themeAsyncOperations;
            ThemeBulkDeleteFailures = themeBulkDeleteFailures;
            Themeid = themeid;
            Timezoneruleversionnumber = timezoneruleversionnumber;
            Transactioncurrencyid = transactioncurrencyid;
            Type = type;
            Utcconversiontimezonecode = utcconversiontimezonecode;
            Versionnumber = versionnumber;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "_createdby_value")]
        public string _createdbyValue { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "_createdonbehalfby_value")]
        public string _createdonbehalfbyValue { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "_logoid_value")]
        public string _logoidValue { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "_modifiedby_value")]
        public string _modifiedbyValue { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "_modifiedonbehalfby_value")]
        public string _modifiedonbehalfbyValue { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "_organizationid_value")]
        public string _organizationidValue { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "_transactioncurrencyid_value")]
        public string _transactioncurrencyidValue { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "backgroundcolor")]
        public string Backgroundcolor { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "controlborder")]
        public string Controlborder { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "controlshade")]
        public string Controlshade { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "createdby")]
        public MicrosoftDynamicsCRMsystemuser Createdby { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "createdon")]
        public System.DateTimeOffset? Createdon { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "createdonbehalfby")]
        public MicrosoftDynamicsCRMsystemuser Createdonbehalfby { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "defaultcustomentitycolor")]
        public string Defaultcustomentitycolor { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "defaultentitycolor")]
        public string Defaultentitycolor { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "exchangerate")]
        public double? Exchangerate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "globallinkcolor")]
        public string Globallinkcolor { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "headercolor")]
        public string Headercolor { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "hoverlinkeffect")]
        public string Hoverlinkeffect { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "importsequencenumber")]
        public int? Importsequencenumber { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "isdefaulttheme")]
        public bool? Isdefaulttheme { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "logoimage")]
        public MicrosoftDynamicsCRMwebresource Logoimage { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "logotooltip")]
        public string Logotooltip { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "modifiedby")]
        public MicrosoftDynamicsCRMsystemuser Modifiedby { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "modifiedon")]
        public System.DateTimeOffset? Modifiedon { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "modifiedonbehalfby")]
        public MicrosoftDynamicsCRMsystemuser Modifiedonbehalfby { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "navbarbackgroundcolor")]
        public string Navbarbackgroundcolor { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "navbarshelfcolor")]
        public string Navbarshelfcolor { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "organizationid")]
        public MicrosoftDynamicsCRMorganization Organizationid { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "overriddencreatedon")]
        public System.DateTimeOffset? Overriddencreatedon { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "processcontrolcolor")]
        public string Processcontrolcolor { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "selectedlinkeffect")]
        public string Selectedlinkeffect { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "statecode")]
        public int? Statecode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "statuscode")]
        public int? Statuscode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "theme_AsyncOperations")]
        public IList<MicrosoftDynamicsCRMasyncoperation> ThemeAsyncOperations { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "theme_BulkDeleteFailures")]
        public IList<MicrosoftDynamicsCRMbulkdeletefailure> ThemeBulkDeleteFailures { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "themeid")]
        public string Themeid { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "timezoneruleversionnumber")]
        public int? Timezoneruleversionnumber { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "transactioncurrencyid")]
        public MicrosoftDynamicsCRMtransactioncurrency Transactioncurrencyid { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "type")]
        public bool? Type { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "utcconversiontimezonecode")]
        public int? Utcconversiontimezonecode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "versionnumber")]
        public object Versionnumber { get; set; }

    }
}
