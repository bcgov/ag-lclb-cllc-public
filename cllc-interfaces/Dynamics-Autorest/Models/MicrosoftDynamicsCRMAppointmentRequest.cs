// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Gov.Lclb.Cllb.Interfaces.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// AppointmentRequest
    /// </summary>
    public partial class MicrosoftDynamicsCRMAppointmentRequest
    {
        /// <summary>
        /// Initializes a new instance of the
        /// MicrosoftDynamicsCRMAppointmentRequest class.
        /// </summary>
        public MicrosoftDynamicsCRMAppointmentRequest()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// MicrosoftDynamicsCRMAppointmentRequest class.
        /// </summary>
        /// <param name="direction">Possible values include: 'Forward',
        /// 'Backward'</param>
        public MicrosoftDynamicsCRMAppointmentRequest(int? anchorOffset = default(int?), IList<MicrosoftDynamicsCRMAppointmentsToIgnore> appointmentsToIgnore = default(IList<MicrosoftDynamicsCRMAppointmentsToIgnore>), IList<MicrosoftDynamicsCRMConstraintRelation> constraints = default(IList<MicrosoftDynamicsCRMConstraintRelation>), string direction = default(string), int? duration = default(int?), int? numberOfResults = default(int?), IList<MicrosoftDynamicsCRMObjectiveRelation> objectives = default(IList<MicrosoftDynamicsCRMObjectiveRelation>), int? recurrenceDuration = default(int?), int? recurrenceTimeZoneCode = default(int?), IList<MicrosoftDynamicsCRMRequiredResource> requiredResources = default(IList<MicrosoftDynamicsCRMRequiredResource>), string searchRecurrenceRule = default(string), System.DateTimeOffset? searchRecurrenceStart = default(System.DateTimeOffset?), System.DateTimeOffset? searchWindowEnd = default(System.DateTimeOffset?), System.DateTimeOffset? searchWindowStart = default(System.DateTimeOffset?), string serviceId = default(string), IList<string> sites = default(IList<string>), int? userTimeZoneCode = default(int?))
        {
            AnchorOffset = anchorOffset;
            AppointmentsToIgnore = appointmentsToIgnore;
            Constraints = constraints;
            Direction = direction;
            Duration = duration;
            NumberOfResults = numberOfResults;
            Objectives = objectives;
            RecurrenceDuration = recurrenceDuration;
            RecurrenceTimeZoneCode = recurrenceTimeZoneCode;
            RequiredResources = requiredResources;
            SearchRecurrenceRule = searchRecurrenceRule;
            SearchRecurrenceStart = searchRecurrenceStart;
            SearchWindowEnd = searchWindowEnd;
            SearchWindowStart = searchWindowStart;
            ServiceId = serviceId;
            Sites = sites;
            UserTimeZoneCode = userTimeZoneCode;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "AnchorOffset")]
        public int? AnchorOffset { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "AppointmentsToIgnore")]
        public IList<MicrosoftDynamicsCRMAppointmentsToIgnore> AppointmentsToIgnore { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Constraints")]
        public IList<MicrosoftDynamicsCRMConstraintRelation> Constraints { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'Forward', 'Backward'
        /// </summary>
        [JsonProperty(PropertyName = "Direction")]
        public string Direction { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Duration")]
        public int? Duration { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "NumberOfResults")]
        public int? NumberOfResults { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Objectives")]
        public IList<MicrosoftDynamicsCRMObjectiveRelation> Objectives { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "RecurrenceDuration")]
        public int? RecurrenceDuration { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "RecurrenceTimeZoneCode")]
        public int? RecurrenceTimeZoneCode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "RequiredResources")]
        public IList<MicrosoftDynamicsCRMRequiredResource> RequiredResources { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SearchRecurrenceRule")]
        public string SearchRecurrenceRule { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SearchRecurrenceStart")]
        public System.DateTimeOffset? SearchRecurrenceStart { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SearchWindowEnd")]
        public System.DateTimeOffset? SearchWindowEnd { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SearchWindowStart")]
        public System.DateTimeOffset? SearchWindowStart { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ServiceId")]
        public string ServiceId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Sites")]
        public IList<string> Sites { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "UserTimeZoneCode")]
        public int? UserTimeZoneCode { get; set; }

    }
}
