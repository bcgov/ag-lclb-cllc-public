// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Gov.Lclb.Cllb.Interfaces.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class MicrosoftDynamicsCRMmailbox
    {
        /// <summary>
        /// Initializes a new instance of the MicrosoftDynamicsCRMmailbox
        /// class.
        /// </summary>
        public MicrosoftDynamicsCRMmailbox()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the MicrosoftDynamicsCRMmailbox
        /// class.
        /// </summary>
        public MicrosoftDynamicsCRMmailbox(IList<MicrosoftDynamicsCRMannotation> mailboxAnnotation = default(IList<MicrosoftDynamicsCRMannotation>), IList<MicrosoftDynamicsCRMsyncerror> mailboxSyncErrors = default(IList<MicrosoftDynamicsCRMsyncerror>), string _createdbyValue = default(string), string _createdonbehalfbyValue = default(string), string _emailserverprofileValue = default(string), string _modifiedbyValue = default(string), string _modifiedonbehalfbyValue = default(string), string _organizationidValue = default(string), string _owneridValue = default(string), string _owningbusinessunitValue = default(string), string _owningteamValue = default(string), string _owninguserValue = default(string), string _regardingobjectidValue = default(string), int? actdeliverymethod = default(int?), IList<MicrosoftDynamicsCRMactivitypointer> activitypointerSendermailboxidMailbox = default(IList<MicrosoftDynamicsCRMactivitypointer>), int? actstatus = default(int?), bool? allowemailconnectortousecredentials = default(bool?), int? averagetotalduration = default(int?), MicrosoftDynamicsCRMsystemuser createdby = default(MicrosoftDynamicsCRMsystemuser), System.DateTimeOffset? createdon = default(System.DateTimeOffset?), MicrosoftDynamicsCRMsystemuser createdonbehalfby = default(MicrosoftDynamicsCRMsystemuser), IList<MicrosoftDynamicsCRMemail> emailSendermailboxidMailbox = default(IList<MicrosoftDynamicsCRMemail>), string emailaddress = default(string), int? emailrouteraccessapproval = default(int?), MicrosoftDynamicsCRMemailserverprofile emailserverprofile = default(MicrosoftDynamicsCRMemailserverprofile), bool? enabledforact = default(bool?), bool? enabledforincomingemail = default(bool?), bool? enabledforoutgoingemail = default(bool?), string entityimage = default(string), object entityimageTimestamp = default(object), string entityimageUrl = default(string), string entityimageid = default(string), string ewsurl = default(string), string exchangesyncstatexml = default(string), string folderhierarchy = default(string), int? forcedunlockcount = default(int?), string hostid = default(string), int? incomingemaildeliverymethod = default(int?), int? incomingemailstatus = default(int?), bool? isactsyncorgflagset = default(bool?), bool? isemailaddressapprovedbyo365admin = default(bool?), bool? isforwardmailbox = default(bool?), bool? ispasswordset = default(bool?), bool? isserviceaccount = default(bool?), int? itemsfailedforlastsync = default(int?), int? itemsprocessedforlastsync = default(int?), System.DateTimeOffset? lastautodiscoveredon = default(System.DateTimeOffset?), int? lastduration = default(int?), System.DateTimeOffset? lastmailboxforcedunlockoccurredon = default(System.DateTimeOffset?), System.DateTimeOffset? lastsuccessfulsynccompletedon = default(System.DateTimeOffset?), string lastsyncerror = default(string), int? lastsyncerrorcode = default(int?), int? lastsyncerrorcount = default(int?), string lastsyncerrormachinename = default(string), System.DateTimeOffset? lastsyncerroroccurredon = default(System.DateTimeOffset?), System.DateTimeOffset? lastsyncstartedon = default(System.DateTimeOffset?), IList<MicrosoftDynamicsCRMasyncoperation> mailboxAsyncoperations = default(IList<MicrosoftDynamicsCRMasyncoperation>), string mailboxid = default(string), int? mailboxprocessingcontext = default(int?), int? mailboxstatus = default(int?), MicrosoftDynamicsCRMsystemuser modifiedby = default(MicrosoftDynamicsCRMsystemuser), System.DateTimeOffset? modifiedon = default(System.DateTimeOffset?), MicrosoftDynamicsCRMsystemuser modifiedonbehalfby = default(MicrosoftDynamicsCRMsystemuser), string name = default(string), int? noactcount = default(int?), int? noemailcount = default(int?), System.DateTimeOffset? officeappsdeploymentcompleteon = default(System.DateTimeOffset?), string officeappsdeploymenterror = default(string), bool? officeappsdeploymentscheduled = default(bool?), int? officeappsdeploymentstatus = default(int?), MicrosoftDynamicsCRMorganization organizationid = default(MicrosoftDynamicsCRMorganization), bool? orgmarkedasprimaryforexchangesync = default(bool?), int? outgoingemaildeliverymethod = default(int?), int? outgoingemailstatus = default(int?), MicrosoftDynamicsCRMprincipal ownerid = default(MicrosoftDynamicsCRMprincipal), MicrosoftDynamicsCRMbusinessunit owningbusinessunit = default(MicrosoftDynamicsCRMbusinessunit), MicrosoftDynamicsCRMteam owningteam = default(MicrosoftDynamicsCRMteam), MicrosoftDynamicsCRMsystemuser owninguser = default(MicrosoftDynamicsCRMsystemuser), string password = default(string), System.DateTimeOffset? postponemailboxprocessinguntil = default(System.DateTimeOffset?), System.DateTimeOffset? postponeofficeappsdeploymentuntil = default(System.DateTimeOffset?), System.DateTimeOffset? postponesendinguntil = default(System.DateTimeOffset?), System.DateTimeOffset? postponetestemailconfigurationuntil = default(System.DateTimeOffset?), bool? processanddeleteemails = default(bool?), int? processedtimes = default(int?), System.DateTimeOffset? processemailreceivedafter = default(System.DateTimeOffset?), System.DateTimeOffset? processinglastattemptedon = default(System.DateTimeOffset?), int? processingstatecode = default(int?), IList<MicrosoftDynamicsCRMqueue> queueDefaultmailboxMailbox = default(IList<MicrosoftDynamicsCRMqueue>), System.DateTimeOffset? receivingpostponeduntil = default(System.DateTimeOffset?), System.DateTimeOffset? receivingpostponeduntilforact = default(System.DateTimeOffset?), MicrosoftDynamicsCRMsystemuser regardingobjectid = default(MicrosoftDynamicsCRMsystemuser), MicrosoftDynamicsCRMqueue regardingobjectidQueue = default(MicrosoftDynamicsCRMqueue), int? statecode = default(int?), int? statuscode = default(int?), IList<MicrosoftDynamicsCRMsystemuser> systemuserDefaultmailboxMailbox = default(IList<MicrosoftDynamicsCRMsystemuser>), int? testemailconfigurationretrycount = default(int?), bool? testemailconfigurationscheduled = default(bool?), System.DateTimeOffset? testmailboxaccesscompletedon = default(System.DateTimeOffset?), int? timezoneruleversionnumber = default(int?), IList<MicrosoftDynamicsCRMtracelog> tracelogMailbox = default(IList<MicrosoftDynamicsCRMtracelog>), int? transientfailurecount = default(int?), string undeliverablefolder = default(string), string username = default(string), int? utcconversiontimezonecode = default(int?), int? verboseloggingenabled = default(int?), object versionnumber = default(object))
        {
            MailboxAnnotation = mailboxAnnotation;
            MailboxSyncErrors = mailboxSyncErrors;
            this._createdbyValue = _createdbyValue;
            this._createdonbehalfbyValue = _createdonbehalfbyValue;
            this._emailserverprofileValue = _emailserverprofileValue;
            this._modifiedbyValue = _modifiedbyValue;
            this._modifiedonbehalfbyValue = _modifiedonbehalfbyValue;
            this._organizationidValue = _organizationidValue;
            this._owneridValue = _owneridValue;
            this._owningbusinessunitValue = _owningbusinessunitValue;
            this._owningteamValue = _owningteamValue;
            this._owninguserValue = _owninguserValue;
            this._regardingobjectidValue = _regardingobjectidValue;
            Actdeliverymethod = actdeliverymethod;
            ActivitypointerSendermailboxidMailbox = activitypointerSendermailboxidMailbox;
            Actstatus = actstatus;
            Allowemailconnectortousecredentials = allowemailconnectortousecredentials;
            Averagetotalduration = averagetotalduration;
            Createdby = createdby;
            Createdon = createdon;
            Createdonbehalfby = createdonbehalfby;
            EmailSendermailboxidMailbox = emailSendermailboxidMailbox;
            Emailaddress = emailaddress;
            Emailrouteraccessapproval = emailrouteraccessapproval;
            Emailserverprofile = emailserverprofile;
            Enabledforact = enabledforact;
            Enabledforincomingemail = enabledforincomingemail;
            Enabledforoutgoingemail = enabledforoutgoingemail;
            Entityimage = entityimage;
            EntityimageTimestamp = entityimageTimestamp;
            EntityimageUrl = entityimageUrl;
            Entityimageid = entityimageid;
            Ewsurl = ewsurl;
            Exchangesyncstatexml = exchangesyncstatexml;
            Folderhierarchy = folderhierarchy;
            Forcedunlockcount = forcedunlockcount;
            Hostid = hostid;
            Incomingemaildeliverymethod = incomingemaildeliverymethod;
            Incomingemailstatus = incomingemailstatus;
            Isactsyncorgflagset = isactsyncorgflagset;
            Isemailaddressapprovedbyo365admin = isemailaddressapprovedbyo365admin;
            Isforwardmailbox = isforwardmailbox;
            Ispasswordset = ispasswordset;
            Isserviceaccount = isserviceaccount;
            Itemsfailedforlastsync = itemsfailedforlastsync;
            Itemsprocessedforlastsync = itemsprocessedforlastsync;
            Lastautodiscoveredon = lastautodiscoveredon;
            Lastduration = lastduration;
            Lastmailboxforcedunlockoccurredon = lastmailboxforcedunlockoccurredon;
            Lastsuccessfulsynccompletedon = lastsuccessfulsynccompletedon;
            Lastsyncerror = lastsyncerror;
            Lastsyncerrorcode = lastsyncerrorcode;
            Lastsyncerrorcount = lastsyncerrorcount;
            Lastsyncerrormachinename = lastsyncerrormachinename;
            Lastsyncerroroccurredon = lastsyncerroroccurredon;
            Lastsyncstartedon = lastsyncstartedon;
            MailboxAsyncoperations = mailboxAsyncoperations;
            Mailboxid = mailboxid;
            Mailboxprocessingcontext = mailboxprocessingcontext;
            Mailboxstatus = mailboxstatus;
            Modifiedby = modifiedby;
            Modifiedon = modifiedon;
            Modifiedonbehalfby = modifiedonbehalfby;
            Name = name;
            Noactcount = noactcount;
            Noemailcount = noemailcount;
            Officeappsdeploymentcompleteon = officeappsdeploymentcompleteon;
            Officeappsdeploymenterror = officeappsdeploymenterror;
            Officeappsdeploymentscheduled = officeappsdeploymentscheduled;
            Officeappsdeploymentstatus = officeappsdeploymentstatus;
            Organizationid = organizationid;
            Orgmarkedasprimaryforexchangesync = orgmarkedasprimaryforexchangesync;
            Outgoingemaildeliverymethod = outgoingemaildeliverymethod;
            Outgoingemailstatus = outgoingemailstatus;
            Ownerid = ownerid;
            Owningbusinessunit = owningbusinessunit;
            Owningteam = owningteam;
            Owninguser = owninguser;
            Password = password;
            Postponemailboxprocessinguntil = postponemailboxprocessinguntil;
            Postponeofficeappsdeploymentuntil = postponeofficeappsdeploymentuntil;
            Postponesendinguntil = postponesendinguntil;
            Postponetestemailconfigurationuntil = postponetestemailconfigurationuntil;
            Processanddeleteemails = processanddeleteemails;
            Processedtimes = processedtimes;
            Processemailreceivedafter = processemailreceivedafter;
            Processinglastattemptedon = processinglastattemptedon;
            Processingstatecode = processingstatecode;
            QueueDefaultmailboxMailbox = queueDefaultmailboxMailbox;
            Receivingpostponeduntil = receivingpostponeduntil;
            Receivingpostponeduntilforact = receivingpostponeduntilforact;
            Regardingobjectid = regardingobjectid;
            RegardingobjectidQueue = regardingobjectidQueue;
            Statecode = statecode;
            Statuscode = statuscode;
            SystemuserDefaultmailboxMailbox = systemuserDefaultmailboxMailbox;
            Testemailconfigurationretrycount = testemailconfigurationretrycount;
            Testemailconfigurationscheduled = testemailconfigurationscheduled;
            Testmailboxaccesscompletedon = testmailboxaccesscompletedon;
            Timezoneruleversionnumber = timezoneruleversionnumber;
            TracelogMailbox = tracelogMailbox;
            Transientfailurecount = transientfailurecount;
            Undeliverablefolder = undeliverablefolder;
            Username = username;
            Utcconversiontimezonecode = utcconversiontimezonecode;
            Verboseloggingenabled = verboseloggingenabled;
            Versionnumber = versionnumber;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Mailbox_Annotation")]
        public IList<MicrosoftDynamicsCRMannotation> MailboxAnnotation { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Mailbox_SyncErrors")]
        public IList<MicrosoftDynamicsCRMsyncerror> MailboxSyncErrors { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "_createdby_value")]
        public string _createdbyValue { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "_createdonbehalfby_value")]
        public string _createdonbehalfbyValue { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "_emailserverprofile_value")]
        public string _emailserverprofileValue { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "_modifiedby_value")]
        public string _modifiedbyValue { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "_modifiedonbehalfby_value")]
        public string _modifiedonbehalfbyValue { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "_organizationid_value")]
        public string _organizationidValue { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "_ownerid_value")]
        public string _owneridValue { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "_owningbusinessunit_value")]
        public string _owningbusinessunitValue { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "_owningteam_value")]
        public string _owningteamValue { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "_owninguser_value")]
        public string _owninguserValue { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "_regardingobjectid_value")]
        public string _regardingobjectidValue { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "actdeliverymethod")]
        public int? Actdeliverymethod { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "activitypointer_sendermailboxid_mailbox")]
        public IList<MicrosoftDynamicsCRMactivitypointer> ActivitypointerSendermailboxidMailbox { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "actstatus")]
        public int? Actstatus { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "allowemailconnectortousecredentials")]
        public bool? Allowemailconnectortousecredentials { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "averagetotalduration")]
        public int? Averagetotalduration { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "createdby")]
        public MicrosoftDynamicsCRMsystemuser Createdby { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "createdon")]
        public System.DateTimeOffset? Createdon { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "createdonbehalfby")]
        public MicrosoftDynamicsCRMsystemuser Createdonbehalfby { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "email_sendermailboxid_mailbox")]
        public IList<MicrosoftDynamicsCRMemail> EmailSendermailboxidMailbox { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "emailaddress")]
        public string Emailaddress { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "emailrouteraccessapproval")]
        public int? Emailrouteraccessapproval { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "emailserverprofile")]
        public MicrosoftDynamicsCRMemailserverprofile Emailserverprofile { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "enabledforact")]
        public bool? Enabledforact { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "enabledforincomingemail")]
        public bool? Enabledforincomingemail { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "enabledforoutgoingemail")]
        public bool? Enabledforoutgoingemail { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "entityimage")]
        public string Entityimage { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "entityimage_timestamp")]
        public object EntityimageTimestamp { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "entityimage_url")]
        public string EntityimageUrl { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "entityimageid")]
        public string Entityimageid { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ewsurl")]
        public string Ewsurl { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "exchangesyncstatexml")]
        public string Exchangesyncstatexml { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "folderhierarchy")]
        public string Folderhierarchy { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "forcedunlockcount")]
        public int? Forcedunlockcount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "hostid")]
        public string Hostid { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "incomingemaildeliverymethod")]
        public int? Incomingemaildeliverymethod { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "incomingemailstatus")]
        public int? Incomingemailstatus { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "isactsyncorgflagset")]
        public bool? Isactsyncorgflagset { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "isemailaddressapprovedbyo365admin")]
        public bool? Isemailaddressapprovedbyo365admin { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "isforwardmailbox")]
        public bool? Isforwardmailbox { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ispasswordset")]
        public bool? Ispasswordset { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "isserviceaccount")]
        public bool? Isserviceaccount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "itemsfailedforlastsync")]
        public int? Itemsfailedforlastsync { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "itemsprocessedforlastsync")]
        public int? Itemsprocessedforlastsync { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "lastautodiscoveredon")]
        public System.DateTimeOffset? Lastautodiscoveredon { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "lastduration")]
        public int? Lastduration { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "lastmailboxforcedunlockoccurredon")]
        public System.DateTimeOffset? Lastmailboxforcedunlockoccurredon { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "lastsuccessfulsynccompletedon")]
        public System.DateTimeOffset? Lastsuccessfulsynccompletedon { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "lastsyncerror")]
        public string Lastsyncerror { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "lastsyncerrorcode")]
        public int? Lastsyncerrorcode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "lastsyncerrorcount")]
        public int? Lastsyncerrorcount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "lastsyncerrormachinename")]
        public string Lastsyncerrormachinename { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "lastsyncerroroccurredon")]
        public System.DateTimeOffset? Lastsyncerroroccurredon { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "lastsyncstartedon")]
        public System.DateTimeOffset? Lastsyncstartedon { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "mailbox_asyncoperations")]
        public IList<MicrosoftDynamicsCRMasyncoperation> MailboxAsyncoperations { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "mailboxid")]
        public string Mailboxid { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "mailboxprocessingcontext")]
        public int? Mailboxprocessingcontext { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "mailboxstatus")]
        public int? Mailboxstatus { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "modifiedby")]
        public MicrosoftDynamicsCRMsystemuser Modifiedby { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "modifiedon")]
        public System.DateTimeOffset? Modifiedon { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "modifiedonbehalfby")]
        public MicrosoftDynamicsCRMsystemuser Modifiedonbehalfby { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "noactcount")]
        public int? Noactcount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "noemailcount")]
        public int? Noemailcount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "officeappsdeploymentcompleteon")]
        public System.DateTimeOffset? Officeappsdeploymentcompleteon { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "officeappsdeploymenterror")]
        public string Officeappsdeploymenterror { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "officeappsdeploymentscheduled")]
        public bool? Officeappsdeploymentscheduled { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "officeappsdeploymentstatus")]
        public int? Officeappsdeploymentstatus { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "organizationid")]
        public MicrosoftDynamicsCRMorganization Organizationid { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "orgmarkedasprimaryforexchangesync")]
        public bool? Orgmarkedasprimaryforexchangesync { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "outgoingemaildeliverymethod")]
        public int? Outgoingemaildeliverymethod { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "outgoingemailstatus")]
        public int? Outgoingemailstatus { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ownerid")]
        public MicrosoftDynamicsCRMprincipal Ownerid { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "owningbusinessunit")]
        public MicrosoftDynamicsCRMbusinessunit Owningbusinessunit { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "owningteam")]
        public MicrosoftDynamicsCRMteam Owningteam { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "owninguser")]
        public MicrosoftDynamicsCRMsystemuser Owninguser { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "password")]
        public string Password { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "postponemailboxprocessinguntil")]
        public System.DateTimeOffset? Postponemailboxprocessinguntil { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "postponeofficeappsdeploymentuntil")]
        public System.DateTimeOffset? Postponeofficeappsdeploymentuntil { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "postponesendinguntil")]
        public System.DateTimeOffset? Postponesendinguntil { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "postponetestemailconfigurationuntil")]
        public System.DateTimeOffset? Postponetestemailconfigurationuntil { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "processanddeleteemails")]
        public bool? Processanddeleteemails { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "processedtimes")]
        public int? Processedtimes { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "processemailreceivedafter")]
        public System.DateTimeOffset? Processemailreceivedafter { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "processinglastattemptedon")]
        public System.DateTimeOffset? Processinglastattemptedon { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "processingstatecode")]
        public int? Processingstatecode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "queue_defaultmailbox_mailbox")]
        public IList<MicrosoftDynamicsCRMqueue> QueueDefaultmailboxMailbox { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "receivingpostponeduntil")]
        public System.DateTimeOffset? Receivingpostponeduntil { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "receivingpostponeduntilforact")]
        public System.DateTimeOffset? Receivingpostponeduntilforact { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "regardingobjectid")]
        public MicrosoftDynamicsCRMsystemuser Regardingobjectid { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "regardingobjectid_queue")]
        public MicrosoftDynamicsCRMqueue RegardingobjectidQueue { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "statecode")]
        public int? Statecode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "statuscode")]
        public int? Statuscode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "systemuser_defaultmailbox_mailbox")]
        public IList<MicrosoftDynamicsCRMsystemuser> SystemuserDefaultmailboxMailbox { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "testemailconfigurationretrycount")]
        public int? Testemailconfigurationretrycount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "testemailconfigurationscheduled")]
        public bool? Testemailconfigurationscheduled { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "testmailboxaccesscompletedon")]
        public System.DateTimeOffset? Testmailboxaccesscompletedon { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "timezoneruleversionnumber")]
        public int? Timezoneruleversionnumber { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "tracelog_Mailbox")]
        public IList<MicrosoftDynamicsCRMtracelog> TracelogMailbox { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "transientfailurecount")]
        public int? Transientfailurecount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "undeliverablefolder")]
        public string Undeliverablefolder { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "username")]
        public string Username { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "utcconversiontimezonecode")]
        public int? Utcconversiontimezonecode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "verboseloggingenabled")]
        public int? Verboseloggingenabled { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "versionnumber")]
        public object Versionnumber { get; set; }

    }
}
