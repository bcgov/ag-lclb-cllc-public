// TEST build
// uses https://github.com/openshift/jenkins-client-plugin

node('master') {
    stage('Startup') {
        if (changeset("cllc-public-app/ClientApp/*")) {
                sh 'oc cancel-build bc/cllc-public-angular'                
            }
        if (changeset("cllc-public-app/*")) {
                sh 'oc cancel-build bc/cllc-public-api'        
        }
    }

    stage('Build') {
		openshift.withCluster() {
			openshift.withProject() {
				parallel('Angular': {

					if (changeset("cllc-public-app/ClientApp/*")) {
						
								def bc1 = openshift.selector('bc', 'cllc-public-angular')
								def buildSelector1 = bc1.startBuild("--commit=master")
								sleep(5)
						buildSelector1.logs('-f')
					
						
						def bc2 = openshift.selector('bc', 'cllc-public-frontend')
						def buildSelector2 = bc2.startBuild()
						def builds = bc2.related('builds')
						
						timeout(10) {

        
							builds.watch {
            
							echo "So far, ${bc2.name()} has created builds: ${it.names()}"

							return it.count() > 0
							}

							// wait for the build to complete.
							builds.watch {
								if ( it.count() == 0 ) return false

								def allDone = true
								it.withEach {
									def buildModel = it.object()
									if ( it.object().status.phase != "Complete" ) {
									allDone = false
								}
							}

							return allDone;
						}
						
					}
				}, 'C# API': {
					if (changeset("cllc-public-app/*")) {
						openshift.withProject() {
					def bc = openshift.selector('bc', 'cllc-public-api')
					def buildSelector = bc.startBuild("--commit=master")
					buildSelector.logs('-f')						   
				}
				openshift.tag("cllc-public-api:latest", "cllc-public-api:test")
					
				})
			}
		}

        
    }    
}

