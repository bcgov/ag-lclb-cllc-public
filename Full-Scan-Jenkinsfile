node('master') {

    stage('Build Image') {
        echo "Building..."
        openshiftBuild bldCfg: 'cllc-public', showBuildLogs: 'true'
        openshiftTag destStream: 'cllc-public', verbose: 'true', destTag: '$BUILD_ID', srcStream: 'cllc-public', srcTag: 'latest'
    }
	
    stage('Deploy on Dev') {
        echo "Deploying to dev..."
        openshiftTag destStream: 'cllc-public', verbose: 'true', destTag: 'dev', srcStream: 'cllc-public', srcTag: '$BUILD_ID'
	//Sleeping for a while to wait deployment completes
	sh 'sleep 1m'
    }
	
	 podTemplate(label: 'zap', name: 'zap', serviceAccount: 'jenkins', cloud: 'openshift', containers: [
    containerTemplate(
        name: 'jnlp',
        image: '172.50.0.2:5000/openshift/jenkins-slave-zap',
        resourceRequestCpu: '100m',
        resourceLimitCpu: '500m',
        resourceRequestMemory: '1Gi',
        resourceLimitMemory: '3Gi',
        workingDir: '/home/jenkins',
        command: '',
        args: '${computer.jnlpmac} ${computer.name}'
    )
    ]){
		stage('ZAP Security Scan')
		{
			dir('/zap') {
				def retVal = sh returnStatus: true, script: '/zap/zap-baseline.py -r baseline.html -t http://cannabis-licensing-dev.pathfinder.bcgov'
				publishHTML([allowMissing: false, alwaysLinkToLastBuild: false, keepAll: true, reportDir: '/zap/wrk', reportFiles: 'baseline.html', reportName: 'ZAP Baseline Scan', reportTitles: 'ZAP Baseline Scan'])
				echo "Return value is: ${retVal}"
			}
		}	
	}	
}


node('bddstack') {

	stage('FT on Dev') {
		//the checkout is mandatory, otherwise functional test would fail
        echo "checking out source"
        echo "Build: ${BUILD_ID}"
        checkout scm
        dir('functional-tests') {
	    try {
                sh './gradlew --debug --stacktrace chromeHeadlessTest'
	    } finally {
		        archiveArtifacts allowEmptyArchive: true, artifacts: 'build/reports/**/*'
                archiveArtifacts allowEmptyArchive: true, artifacts: 'build/test-results/**/*'
                junit 'build/test-results/**/*.xml'
                publishHTML (target: [
                            allowMissing: false,
                            alwaysLinkToLastBuild: false,
                            keepAll: true,
                            reportDir: 'build/reports/spock',
                            reportFiles: 'index.html',
                            reportName: "BDD Spock Report"
                        ])
                publishHTML (target: [
                            allowMissing: false,
                            alwaysLinkToLastBuild: false,
                            keepAll: true,
                            reportDir: 'build/reports/tests/chromeHeadlessTest',
                            reportFiles: 'index.html',
                            reportName: "Full Test Report"
                        ])        
	    }
        }
    }
}

stage('Deploy on Test') {
    input "Deploy to test?"
    node('master') {
        openshiftTag destStream: 'cllc-public', verbose: 'true', destTag: 'test', srcStream: 'cllc-public', srcTag: '$BUILD_ID'
	sh 'sleep 3m'
    }
}

