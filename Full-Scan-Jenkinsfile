node('master') {

   stage('SonarQube Scan') {
        echo "Running SonarQube static code analysis..."
        openshiftBuild bldCfg: 'cllc-public-sonar', showBuildLogs: 'true'		
    }
	
    stage('Build Image') {
        echo "Building..."
        openshiftBuild bldCfg: 'cllc-public', showBuildLogs: 'true'
        openshiftTag destStream: 'cllc-public', verbose: 'true', destTag: '$BUILD_ID', srcStream: 'cllc-public', srcTag: 'latest'
    }
	
    stage('Deploy on Dev') {
        echo "Deploying to dev..."
        openshiftTag destStream: 'cllc-public', verbose: 'true', destTag: 'dev', srcStream: 'cllc-public', srcTag: '$BUILD_ID'
	//Sleeping for a while to wait deployment completes
	sh 'sleep 1m'
    }		 
}

// ZAP security scan

podTemplate(label: 'owasp-zap', name: 'owasp-zap', serviceAccount: 'jenkins', cloud: 'openshift', containers: [
    containerTemplate(
        name: 'jnlp',
        image: '172.50.0.2:5000/openshift/jenkins-slave-zap',
        resourceRequestCpu: '500m',
        resourceLimitCpu: '1000m',
        resourceRequestMemory: '3Gi',
        resourceLimitMemory: '4Gi',
        workingDir: '/home/jenkins',
        command: '',
        args: '${computer.jnlpmac} ${computer.name}'
    )
    ]){
	stage('ZAP Security Scan')
	{
		node('owasp-zap') {
			//the checkout is mandatory
			echo "checking out source"
			echo "Build: ${BUILD_ID}"
			checkout scm
		
			dir('/zap') {
				def retVal = sh returnStatus: true, script: '/zap/zap-baseline.py -r baseline.html -t http://cannabis-licensing-dev.pathfinder.bcgov'
				publishHTML([allowMissing: false, alwaysLinkToLastBuild: false, keepAll: true, reportDir: '/zap/wrk', reportFiles: 'baseline.html', reportName: 'ZAP Baseline Scan', reportTitles: 'ZAP Baseline Scan'])
				echo "Return value is: ${retVal}"
				
			}
		}
	}	
}	

node('nodejs') {
	stage('Smoke test on Dev') {
		//the checkout is mandatory, otherwise functional test would fail
        echo "checking out source"
        echo "Build: ${BUILD_ID}"
        checkout scm
        dir('cllc-public-app/ClientApp') {
	    try {
				// sh 'Xvfb :1 -screen 0 1024x768x24 &'
				// sh 'export DISPLAY=:1'
				sh 'npm install -g @angular/cli'
				sh 'npm install'
                sh 'ng e2e --no-serve --base-href=http://cannabis-licensing-dev.pathfinder.bcgov'
	    } finally {
		        archiveArtifacts allowEmptyArchive: true, artifacts: 'e2e-reports/**/*'                
                junit 'junitresults.xml'
                publishHTML (target: [
                            allowMissing: false,
                            alwaysLinkToLastBuild: false,
                            keepAll: true,
                            reportDir: 'e2e-reports',
                            reportFiles: 'chrome-test-report.html',
                            reportName: "E2E Report"
                        ])                    
	    }
        }
    }
}


stage('Deploy on Test') {    
    node('master') {
        openshiftTag destStream: 'cllc-public', verbose: 'true', destTag: 'test', srcStream: 'cllc-public', srcTag: '$BUILD_ID'
	sh 'sleep 3m'
    }
}

