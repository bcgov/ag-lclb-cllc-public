{
  "kind": "Template",
  "apiVersion": "v1",
  "metadata": {
    "name": "${NAME}-deployment-template",
    "creationTimestamp": null
  },
  "objects": [
    {
      "apiVersion": "v1",
      "kind": "ServiceAccount",
      "metadata": {
        "name": "${NAME}",
        "annotations": {
          "serviceaccounts.openshift.io/oauth-redirectreference.primary": "{\"kind\":\"OAuthRedirectReference\",\"apiVersion\":\"v1\",\"reference\":{\"kind\":\"Route\",\"name\":\"${NAME}\"}}"
        }
      }
    },
    {
      "kind": "DeploymentConfig",
      "apiVersion": "v1",
      "metadata": {
        "name": "${NAME}",
        "labels": {
          "template": "${NAME}-deployment"
        },
        "annotations": {
          "description": "Defines how to deploy ${NAME}"
        }
      },
      "spec": {
        "strategy": {
          "type": "Rolling"
        },
        "triggers": [
          {
            "type": "ConfigChange"
          },
          {
            "type": "ImageChange",
            "imageChangeParams": {
              "automatic": true,
              "containerNames": [
                "${NAME}"
              ],
              "from": {
                "kind": "ImageStreamTag",
                "namespace": "${IMAGE_NAMESPACE}",
                "name": "${SOURCE_IMAGE_NAME}:${TAG_NAME}"
              }
            }
          }
        ],
        "replicas": 1,
        "selector": {
          "name": "${NAME}"
        },
        "template": {
          "metadata": {
            "name": "${NAME}",
            "labels": {
              "name": "${NAME}"
            }
          },
          "spec": {
            "volumes": [
              {
                "name": "proxy-tls",
                "secret": {
                  "defaultMode": 420,
                  "secretName": "${NAME}-proxy-tls"
                }
              }
            ],
            "containers": [
              {
                "args": [
                  "--https-address=:8443",
                  "--provider=openshift",
                  "--openshift-service-account=${NAME}",
                  "--upstream=http://localhost:8080",
                  "--tls-cert=/etc/tls/private/tls.crt",
                  "--tls-key=/etc/tls/private/tls.key",
                  "--cookie-secure=false",
                  "--cookie-secret=SECRET",
                  "--openshift-sar={\"namespace\":\"${NAMESPACE}\",\"resource\":\"services\",\"name\":\"${NAME}\",\"verb\":\"get\"}"
                ],
                "image": "openshift/oauth-proxy:latest",
                "imagePullPolicy": "IfNotPresent",
                "name": "oauth-proxy",
                "ports": [
                  {
                    "containerPort": 8443,
                    "name": "public",
                    "protocol": "TCP"
                  }
                ],
                "resources": {},
                "terminationMessagePath": "/dev/termination-log",
                "terminationMessagePolicy": "File",
                "volumeMounts": [
                  {
                    "mountPath": "/etc/tls/private",
                    "name": "proxy-tls"
                  }
                ]
              },
              {
                "name": "${NAME}",
                "image": "",
                "ports": [
                  {
                    "containerPort": 8080,
                    "protocol": "TCP"
                  }
                ],
                "env": [
                  {
                    "name": "ASPNETCORE_ENVIRONMENT",
                    "value": "${ASPNETCORE_ENVIRONMENT}"
                  },
                  {
                    "name": "DOTNET_SSL_DIRS",
                    "value": "/var/run/secrets/kubernetes.io/serviceaccount/service-ca.crt"
                    },                                    
				  {
                    "name": "PORTAL_HEALTH_URI",
                    "value": "http://cllc-public-api:8080/hc/ready"
                  },
				  				  {
                    "name": "PDF_HEALTH_URI",
                    "value": "http://pdf-service:8080/hc"
                  },
				  {
                    "name": "FILE_MANAGER_HEALTH_URI",
                    "value": "http://file-manager-service:8088/hc/ready"
                  },
				  {
                    "name": "FEDERAL_REPORTING_HEALTH_URI",
                    "value": "http://federal-reporting-service:8080/hc"
                  },
				  {
                    "name": "GEOCODER_HEALTH_URI",
                    "value": "http://geocoder-service:8080/hc"
                  },
				  {
                    "name": "ONE_STOP_HEALTH_URI",
                    "value": "http://one-stop-service:8080/hc"
                  },
				  {
                    "name": "ORG_BOOK_URI",
                    "value": ""
                  }
				  
                  
                ],
                "resources": {
                  "limits": {
                    "cpu": "${CPU_LIMIT}",
                    "memory": "${MEMORY_LIMIT}"
                  },
                  "requests": {
                    "cpu": "${CPU_REQUEST}",
                    "memory": "${MEMORY_REQUEST}"
                  }
                },
                "readinessProbe": {
                  "httpGet": {
                    "path": "/hc/ready",
                    "port": 8080,
                    "scheme": "HTTP"
                  },
                  "initialDelaySeconds": 10,
                  "timeoutSeconds": 1,
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "failureThreshold": 3
                },
                "livenessProbe": {
                  "httpGet": {
                    "path": "/hc/live",
                    "port": 8080,
                    "scheme": "HTTP"
                  },
                  "initialDelaySeconds": 10,
                  "timeoutSeconds": 1,
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "failureThreshold": 3
                }
              }
            ]
          }
        }
      }
    },
    {
      "kind": "Service",
      "apiVersion": "v1",
      "metadata": {
        "name": "${NAME}",
        "labels": {
          "template": "${NAME}-deployment"
        },
        "annotations": {
          "description": "Exposes and load balances the application pods.",          
          "service.alpha.openshift.io/serving-cert-secret-name": "${NAME}-proxy-tls"
        }      
      },
      "spec": {
        "ports": [
          {
            "name": "8080-tcp",
            "protocol": "TCP",
            "port": 8080,
            "targetPort": 8080
          },
          {
            "name": "8443-tcp",
            "protocol": "TCP",
            "port": 8443,
            "targetPort": 8443
          }
        ],
        "selector": {
          "name": "${NAME}"
        },
        "type": "ClusterIP",
        "sessionAffinity": "None"
      }
    }    
  ],
  "parameters": [
  
    {
      "name": "NAME",
      "displayName": "Name",
      "description": "The name assigned to all of the resources defined in this template.",
      "required": true,
      "value": "watchdog"
    },	
    {
      "name": "SOURCE_IMAGE_NAME",
      "displayName": "Source Image Name",
      "description": "The name of the image to use for this resource.",
      "required": true,
      "value": "watchdog"
    },
    {
      "name": "IMAGE_NAMESPACE",
      "displayName": "Image Namespace",
      "description": "The namespace of the OpenShift project containing the imagestream for the application.",
      "required": true,
      "value": "yuumcs-tools"
    },
    {
      "name": "TAG_NAME",
      "displayName": "Environment TAG name",
      "description": "The TAG name for this environment, e.g., dev, test, prod",
      "required": true,
      "value": "dev"
    },
    {
      "name": "ASPNETCORE_ENVIRONMENT",
      "displayName": "AspNetCore Environment",
      "description": "The ASP Net Core deployment environment setting.",
      "required": true,
      "value": "Production"
    },
    {
      "name": "CPU_LIMIT",
      "displayName": "CPU Limit",
      "description": "Maximum amount of CPU the container can use.",
      "value": "1"
    },
    {
      "name": "MEMORY_LIMIT",
      "displayName": "Memory Limit",
      "description": "Maximum amount of memory the container can use.",
      "value": "2Gi"
    },
    {
      "name": "CPU_REQUEST",
      "displayName": "CPU Request",
      "description": "Starting amount of CPU the container can use.",
      "value": "10m"
    },
    {
      "name": "MEMORY_REQUEST",
      "displayName": "Memory Request",
      "description": "Starting amount of memory the container can use.",
      "value": "512Mi"
    }
  ]
}