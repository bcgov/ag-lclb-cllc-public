{
  "kind": "Template",
  "apiVersion": "v1",
  "metadata":
  {
    "name": "${NAME}-build-template",
    "creationTimestamp": null
  },
  "objects": [  
  {
    "kind": "DeploymentConfig",
    "apiVersion": "v1",
    "metadata": {
        "name": "${SERVICE_NAME}",
        "generation": 1,
        "creationTimestamp": null,
        "labels": {
            "app": "${SERVICE_NAME}"
        },
        "annotations": {
            "openshift.io/generated-by": "OpenShiftNewApp"
        }
    },
    "spec": {
        "strategy": {
            "type": "Rolling",
            "rollingParams": {
                "updatePeriodSeconds": 1,
                "intervalSeconds": 1,
                "timeoutSeconds": 600,
                "maxUnavailable": "25%",
                "maxSurge": "25%"
            },
            "resources": {},
            "activeDeadlineSeconds": 21600
        },
        "triggers": [
            {
                "type": "ConfigChange"
            },
            {
                "type": "ImageChange",
                "imageChangeParams": {
                    "automatic": true,
                    "containerNames": [
                        "${SERVICE_NAME}"
                    ],
                    "from": {
                        "kind": "ImageStreamTag",
                        "namespace": "${NAMESPACE}",
                        "name": "${SERVICE_NAME}:latest"
                    }
                }
            }
        ],
        "replicas": 1,
        "test": false,
        "selector": {
            "app": "${SERVICE_NAME}",
            "deploymentconfig": "${SERVICE_NAME}"
        },
        "template": {
            "metadata": {
                "creationTimestamp": null,
                "labels": {
                    "app": "${SERVICE_NAME}",
                    "deploymentconfig": "${SERVICE_NAME}"
                },
                "annotations": {
                    "openshift.io/generated-by": "OpenShiftNewApp"
                }
            },
            "spec": {
                "volumes": [
                    {
                        "name": "splunk-conf",
                        "persistentVolumeClaim": {
                            "claimName": "${SERVICE_NAME}-conf"
                        }
                    },
                    {
                        "name": "splunk-db",
                        "persistentVolumeClaim": {
                            "claimName": "${SERVICE_NAME}-db"
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "${SERVICE_NAME}",
						"image": " ",
                        "imagePullPolicy": "IfNotPresent",                        
                        "ports": [
                            {
                                "containerPort": 8000,
                                "protocol": "TCP"
                            },
							{
                                "containerPort": 8065,
                                "protocol": "TCP"
                            },
							{
                                "containerPort": 8088,
                                "protocol": "TCP"
                            },
							{
                                "containerPort": 8089,
                                "protocol": "TCP"
                            },
							{
                                "containerPort": 8191,
                                "protocol": "TCP"
                            },
							{
                                "containerPort": 9887,
                                "protocol": "TCP"
                            },
							{
                                "containerPort": 9997,
                                "protocol": "TCP"
                            }
                        ],
                        "env": [
                            {
                                "name": "SPLUNK_PASSWORD",
                                "value": "${SPLUNK_PASSWORD}"
                            },
							{
								"name": "SPLUNK_START_ARGS",
								"value": "--accept-license"
							}
							
                        ],
                        "resources":
						{
						"limits": {
                                "cpu": "${CPU_LIMIT}",
                                "memory": "${MEMORY_LIMIT}"
                            },
                            "requests": {
                                "cpu": "${CPU_REQUEST}",
                                "memory": "${MEMORY_REQUEST}"
                            }                  
						},
                        "volumeMounts": [
                            
							{
                                "name": "splunk-db",
                                "mountPath": "/var/lib/mysql"
                            }
							
                        ],
						"livenessProbe": {
							"initialDelaySeconds": 120,
							"tcpSocket": {
								"port": 8
							},
							"timeoutSeconds": 1
						},
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "Always"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "securityContext": {},
                "schedulerName": "default-scheduler"
            }
        }
    },
    "status": {
        "latestVersion": 0,
        "observedGeneration": 0,
        "replicas": 0,
        "updatedReplicas": 0,
        "availableReplicas": 0,
        "unavailableReplicas": 0
    }
},
{
    "kind": "Service",
    "apiVersion": "v1",
    "metadata": {
        "name": "${SERVICE_NAME}",
        "creationTimestamp": null,
        "labels": {
            "app": "splunk-server-linux"
        },
        "annotations": {
            "openshift.io/generated-by": "OpenShiftNewApp"
        }
    },
    "spec": {
        "ports": [
            {
                "name": "8000-tcp",
                "protocol": "TCP",
                "port": 8000,
                "targetPort": 8000
            },			
			{
                "name": "8065-tcp",
                "protocol": "TCP",
                "port": 8065,
                "targetPort": 8065
            },
			{
                "name": "8088-tcp",
                "protocol": "TCP",
                "port": 8088,
                "targetPort": 8088
            },			
			{
                "name": "8089-tcp",
                "protocol": "TCP",
                "port": 8089,
                "targetPort": 8089
            },			
			{
                "name": "8191-tcp",
                "protocol": "TCP",
                "port": 8191,
                "targetPort": 8191
            },			
			{
                "name": "9887-tcp",
                "protocol": "TCP",
                "port": 9887,
                "targetPort": 9887
            },			
			{
                "name": "9997-tcp",
                "protocol": "TCP",
                "port": 9997,
                "targetPort": 9997
            }
        ],
        "selector": {
            "app": "${SERVICE_NAME}",
            "deploymentconfig": "${SERVICE_NAME}"
        },
        "type": "ClusterIP",
        "sessionAffinity": "None"
    },
    "status": {
        "loadBalancer": {}
    }
}
],
"parameters": [
    {
		"name": "NAME",
		"displayName": "NAME",
		"description": "The name assigned to all of the resources defined in this template.",
		"required": true,
		"value": "splunk"
    },	
	{
		"name": "VOLUME_CAPACITY",
		"displayName": "VOLUME_CAPACITY",
		"description": "VOLUME_CAPACITY",
		"value": "5Gi",
		"required": true
	},
    {
		"name": "CPU_LIMIT",
		"displayName": "CPU Limit",
		"description": "CPU Limit",
		"value": "1",
		"required": true
	},
	{
		"name": "CPU_REQUEST",
		"displayName": "CPU REQUEST",
		"description": "CPU Request",
		"value": "200m",
		"required": true
	},
    {
		"name": "MEMORY_LIMIT",
		"displayName": "Memory Limit",
		"description": "Maximum amount of memory the container can use.",
		"value": "2Gi",
		"required": true
	},
	{
		"name": "MEMORY_REQUEST",
		"displayName": "Memory Limit",
		"description": "Maximum amount of memory the container can use.",
		"value": "1Gi",
		"required": true
	},
	{
		"name": "NAMESPACE",
		"displayName": "Namespace",
		"description": "The OpenShift Namespace where the ImageStream resides.",
		"value": "lclb-cllc-tools"
	},
	{
		"name": "SERVICE_NAME",
		"displayName": "Database Service Name",
		"description": "The name of the OpenShift Service exposed for the database.",
		"value": "splunk",
		"required": true
	},
	{
		"name": "SOURCE_IMAGE_NAMESPACE",
		"displayName": "Source Image Namespace",
		"description": "The namespace of the source image.",
		"required": true,
		"value": "lclb-cllc-tools"
    },
    {
		"name": "SOURCE_IMAGE_TAG",
		"displayName": "Source Image Tag",
		"description": "The tag of the source image.",
		"required": true,
		"value": "latest"
    },
    {
		"name": "DOCKER_FILE_PATH",
		"displayName": "Docker File Path",
		"description": "The path to the docker file defining the build.",
		"required": false,
		"value": "Dockerfile"
    },
    {
		"name": "OUTPUT_IMAGE_TAG",
		"displayName": "Output Image Tag",
		"description": "The tag given to the built image.",
		"required": true,
		"value": "latest"
    },
	{
		"name": "DB_USER",
		"displayName": "DB Connection Username",
		"description": "Username for SQL Server user that will be used for accessing the database.",
		"generate": "expression",
		"from": "user[A-Z0-9]{3}",
		"required": true
	},
	{
		"name": "DB_PASSWORD",
		"displayName": "DB Connection Password",
		"description": "Password for the SQL Server connection user.",
		"generate": "expression",
		"from": "[a-zA-Z0-9]{15}[0-9]{1}",
		"required": true
	},
	{
		"name": "DB_DATABASE",
		"displayName": "Database Name",
		"description": "Name of the database accessed.",
		"value": "surveys",
		"required": true
	},	
	{
		"name": "SPLUNK_PASSWORD",
		"displayName": "Splunk Password",
		"description": "Password for the splunk admin user.",
		"generate": "expression",
		"from": "[a-zA-Z0-9]{16}",
		"required": true
	}
  ]
}
